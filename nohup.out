------------ Options -------------
batchSize: 32
beta1: 0.5
checkpoints_dir: ./checkpoints
config: configs/unit_gta2city_folder.yaml
continue_train: False
dataroot: /ssd1/yifan/hdr_unsuper_compete
dataset_mode: unaligned
display_freq: 30
display_id: 1
display_port: 9000
display_single_pane_ncols: 0
display_winsize: 256
fcn: 0
fineSize: 320
gpu_ids: [0, 1, 2, 3]
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: True
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
lr: 0.0001
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_add_bs32_synBN_hdr_unsuperdata_lsgan_vgg
ndf: 64
new_lr: False
ngf: 64
niter: 100
niter_decay: 100
no_dropout: True
no_flip: False
no_html: False
no_lsgan: False
norm: instance
output_nc: 3
phase: train
pool_size: 50
print_freq: 100
resize_or_crop: crop
save_epoch_freq: 5
save_latest_freq: 5000
serial_batches: False
skip: 1.0
syn_norm: True
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 1.0
which_direction: AtoB
which_epoch: latest
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
#training images = 799
single
---------- Networks initialized -------------
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
-----------------------------------------------
model [SingleGANModel] was created
create web directory ./checkpoints/single_unet_conv_add_bs32_synBN_hdr_unsuperdata_lsgan_vgg/web...
(epoch: 1, iters: 800, time: 0.034) D_A: 0.317 G_A: 0.824 vgg: 0.434 
End of epoch 1 / 200 	 Time Taken: 42 sec
(epoch: 2, iters: 801, time: 0.035) D_A: 0.192 G_A: 0.778 vgg: 0.207 
End of epoch 2 / 200 	 Time Taken: 29 sec
(epoch: 3, iters: 802, time: 0.049) D_A: 0.170 G_A: 0.796 vgg: 0.156 
End of epoch 3 / 200 	 Time Taken: 29 sec
------------ Options -------------
batchSize: 32
beta1: 0.5
checkpoints_dir: ./checkpoints
config: configs/unit_gta2city_folder.yaml
continue_train: False
dataroot: /ssd1/yifan/hdr_unsuper_compete
dataset_mode: unaligned
display_freq: 30
display_id: 1
display_port: 9000
display_single_pane_ncols: 0
display_winsize: 256
fcn: 0
fineSize: 320
gpu_ids: [0, 1, 2, 3]
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: True
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
lr: 0.0001
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_bs32_synBN_hdr_unsuperdata_lsgan_vgg
ndf: 64
new_lr: False
ngf: 64
niter: 100
niter_decay: 100
no_dropout: True
no_flip: False
no_html: False
no_lsgan: False
norm: instance
output_nc: 3
phase: train
pool_size: 50
print_freq: 100
resize_or_crop: crop
save_epoch_freq: 5
save_latest_freq: 5000
serial_batches: False
skip: 0.0
syn_norm: True
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 1.0
which_direction: AtoB
which_epoch: latest
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
#training images = 799
single
---------- Networks initialized -------------
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
-----------------------------------------------
model [SingleGANModel] was created
create web directory ./checkpoints/single_unet_conv_bs32_synBN_hdr_unsuperdata_lsgan_vgg/web...
(epoch: 1, iters: 800, time: 0.034) D_A: 0.308 G_A: 0.939 vgg: 1.201 
End of epoch 1 / 200 	 Time Taken: 41 sec
(epoch: 2, iters: 801, time: 0.034) D_A: 0.200 G_A: 0.750 vgg: 1.172 
End of epoch 2 / 200 	 Time Taken: 28 sec
(epoch: 3, iters: 802, time: 0.046) D_A: 0.138 G_A: 0.815 vgg: 1.109 
End of epoch 3 / 200 	 Time Taken: 29 sec
(epoch: 4, iters: 803, time: 0.034) D_A: 0.209 G_A: 0.651 vgg: 1.174 
End of epoch 4 / 200 	 Time Taken: 29 sec
(epoch: 5, iters: 804, time: 0.034) D_A: 0.218 G_A: 0.477 vgg: 1.191 
saving the model at the end of epoch 5, iters 4000
End of epoch 5 / 200 	 Time Taken: 29 sec
(epoch: 6, iters: 805, time: 0.048) D_A: 0.233 G_A: 0.653 vgg: 1.201 
End of epoch 6 / 200 	 Time Taken: 29 sec
(epoch: 7, iters: 806, time: 0.034) D_A: 0.252 G_A: 0.673 vgg: 1.205 
End of epoch 7 / 200 	 Time Taken: 28 sec
(epoch: 8, iters: 807, time: 0.035) D_A: 0.163 G_A: 0.442 vgg: 1.239 
End of epoch 8 / 200 	 Time Taken: 29 sec
(epoch: 9, iters: 808, time: 0.046) D_A: 0.161 G_A: 0.536 vgg: 1.223 
End of epoch 9 / 200 	 Time Taken: 29 sec
(epoch: 10, iters: 809, time: 0.034) D_A: 0.153 G_A: 0.526 vgg: 1.251 
saving the model at the end of epoch 10, iters 8000
End of epoch 10 / 200 	 Time Taken: 29 sec
(epoch: 11, iters: 810, time: 0.034) D_A: 0.112 G_A: 0.564 vgg: 1.279 
End of epoch 11 / 200 	 Time Taken: 28 sec
(epoch: 12, iters: 811, time: 0.048) D_A: 0.144 G_A: 0.566 vgg: 1.274 
End of epoch 12 / 200 	 Time Taken: 29 sec
(epoch: 13, iters: 812, time: 0.034) D_A: 0.144 G_A: 0.370 vgg: 1.339 
End of epoch 13 / 200 	 Time Taken: 30 sec
(epoch: 14, iters: 813, time: 0.034) D_A: 0.099 G_A: 0.559 vgg: 1.303 
End of epoch 14 / 200 	 Time Taken: 29 sec
(epoch: 15, iters: 814, time: 0.046) D_A: 0.142 G_A: 0.522 vgg: 1.300 
saving the model at the end of epoch 15, iters 12000
End of epoch 15 / 200 	 Time Taken: 29 sec
(epoch: 16, iters: 815, time: 0.034) D_A: 0.169 G_A: 0.681 vgg: 1.385 
End of epoch 16 / 200 	 Time Taken: 28 sec
(epoch: 17, iters: 816, time: 0.035) D_A: 0.307 G_A: 0.301 vgg: 1.508 
End of epoch 17 / 200 	 Time Taken: 29 sec
------------ Options -------------
batchSize: 32
beta1: 0.5
checkpoints_dir: ./checkpoints
config: configs/unit_gta2city_folder.yaml
continue_train: False
dataroot: /ssd1/yifan/hdr_unsuper_compete
dataset_mode: unaligned
display_freq: 30
display_id: 1
display_port: 9000
display_single_pane_ncols: 0
display_winsize: 256
fcn: 0
fineSize: 320
gpu_ids: [0, 1, 2, 3]
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: True
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
lr: 0.0001
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_bs32_synBN_hdr_unsuperdata_lsgan_vgg
ndf: 64
new_lr: False
ngf: 64
niter: 100
niter_decay: 100
no_dropout: True
no_flip: False
no_html: False
no_lsgan: False
norm: instance
output_nc: 3
phase: train
pool_size: 50
print_freq: 100
resize_or_crop: crop
save_epoch_freq: 5
save_latest_freq: 5000
serial_batches: False
skip: 0.0
syn_norm: True
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 1.0
which_direction: AtoB
which_epoch: latest
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
#training images = 799
single
Traceback (most recent call last):
  File "train.py", line 19, in <module>
    model = create_model(opt)
  File "/hdd2/yifan/new_CycleGAN/models/models.py", line 19, in create_model
    from .single_model import SingleModel
  File "/hdd2/yifan/new_CycleGAN/models/single_model.py", line 254
    self.loss_G = self.loss_G_A
                              ^
TabError: inconsistent use of tabs and spaces in indentation
------------ Options -------------
batchSize: 32
beta1: 0.5
checkpoints_dir: ./checkpoints
config: configs/unit_gta2city_folder.yaml
continue_train: False
dataroot: /ssd1/yifan/hdr_unsuper_compete
dataset_mode: unaligned
display_freq: 30
display_id: 1
display_port: 9000
display_single_pane_ncols: 0
display_winsize: 256
fcn: 0
fineSize: 320
gpu_ids: [0, 1, 2, 3]
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: True
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
lr: 0.0001
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_bs32_synBN_hdr_unsuperdata_lsgan_vgg
ndf: 64
new_lr: False
ngf: 64
niter: 100
niter_decay: 100
no_dropout: True
no_flip: False
no_html: False
no_lsgan: False
norm: instance
output_nc: 3
phase: train
pool_size: 50
print_freq: 100
resize_or_crop: crop
save_epoch_freq: 5
save_latest_freq: 5000
serial_batches: False
skip: 0.0
syn_norm: True
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 1.0
which_direction: AtoB
which_epoch: latest
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
#training images = 799
single
---------- Networks initialized -------------
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
-----------------------------------------------
model [SingleGANModel] was created
create web directory ./checkpoints/single_unet_conv_bs32_synBN_hdr_unsuperdata_lsgan_vgg/web...
(epoch: 1, iters: 800, time: 0.034) D_A: 0.212 G_A: 0.789 vgg: 1.122 
End of epoch 1 / 200 	 Time Taken: 41 sec
(epoch: 2, iters: 801, time: 0.034) D_A: 0.218 G_A: 0.985 vgg: 1.143 
End of epoch 2 / 200 	 Time Taken: 28 sec
(epoch: 3, iters: 802, time: 0.046) D_A: 0.185 G_A: 0.759 vgg: 1.248 
End of epoch 3 / 200 	 Time Taken: 29 sec
(epoch: 4, iters: 803, time: 0.035) D_A: 0.292 G_A: 0.934 vgg: 1.301 
End of epoch 4 / 200 	 Time Taken: 28 sec
(epoch: 5, iters: 804, time: 0.035) D_A: 0.535 G_A: 0.916 vgg: 1.269 
saving the model at the end of epoch 5, iters 4000
End of epoch 5 / 200 	 Time Taken: 30 sec
(epoch: 6, iters: 805, time: 0.044) D_A: 0.294 G_A: 0.433 vgg: 1.360 
End of epoch 6 / 200 	 Time Taken: 28 sec
(epoch: 7, iters: 806, time: 0.035) D_A: 0.214 G_A: 0.475 vgg: 1.273 
End of epoch 7 / 200 	 Time Taken: 29 sec
(epoch: 8, iters: 807, time: 0.035) D_A: 0.250 G_A: 0.597 vgg: 1.266 
End of epoch 8 / 200 	 Time Taken: 29 sec
(epoch: 9, iters: 808, time: 0.046) D_A: 0.159 G_A: 0.488 vgg: 1.250 
End of epoch 9 / 200 	 Time Taken: 29 sec
(epoch: 10, iters: 809, time: 0.035) D_A: 0.125 G_A: 0.471 vgg: 1.274 
saving the model at the end of epoch 10, iters 8000
End of epoch 10 / 200 	 Time Taken: 30 sec
(epoch: 11, iters: 810, time: 0.035) D_A: 0.209 G_A: 0.733 vgg: 1.235 
End of epoch 11 / 200 	 Time Taken: 29 sec
(epoch: 12, iters: 811, time: 0.047) D_A: 0.115 G_A: 0.683 vgg: 1.247 
End of epoch 12 / 200 	 Time Taken: 29 sec
(epoch: 13, iters: 812, time: 0.034) D_A: 0.259 G_A: 0.701 vgg: 1.386 
End of epoch 13 / 200 	 Time Taken: 28 sec
(epoch: 14, iters: 813, time: 0.034) D_A: 0.154 G_A: 0.662 vgg: 1.446 
End of epoch 14 / 200 	 Time Taken: 29 sec
(epoch: 15, iters: 814, time: 0.045) D_A: 0.139 G_A: 0.445 vgg: 1.508 
saving the model at the end of epoch 15, iters 12000
End of epoch 15 / 200 	 Time Taken: 29 sec
(epoch: 16, iters: 815, time: 0.034) D_A: 0.117 G_A: 0.603 vgg: 1.418 
End of epoch 16 / 200 	 Time Taken: 28 sec
(epoch: 17, iters: 816, time: 0.034) D_A: 0.094 G_A: 0.580 vgg: 1.432 
End of epoch 17 / 200 	 Time Taken: 29 sec
(epoch: 18, iters: 817, time: 0.047) D_A: 0.267 G_A: 0.818 vgg: 1.524 
End of epoch 18 / 200 	 Time Taken: 29 sec
(epoch: 19, iters: 818, time: 0.035) D_A: 0.124 G_A: 0.559 vgg: 1.498 
End of epoch 19 / 200 	 Time Taken: 28 sec
(epoch: 20, iters: 819, time: 0.035) D_A: 0.143 G_A: 0.512 vgg: 1.491 
saving the model at the end of epoch 20, iters 16000
End of epoch 20 / 200 	 Time Taken: 29 sec
(epoch: 21, iters: 820, time: 0.046) D_A: 0.102 G_A: 0.464 vgg: 1.512 
End of epoch 21 / 200 	 Time Taken: 28 sec
(epoch: 22, iters: 821, time: 0.034) D_A: 0.135 G_A: 0.461 vgg: 1.387 
End of epoch 22 / 200 	 Time Taken: 28 sec
(epoch: 23, iters: 822, time: 0.034) D_A: 0.084 G_A: 0.686 vgg: 1.314 
End of epoch 23 / 200 	 Time Taken: 29 sec
(epoch: 24, iters: 823, time: 0.046) D_A: 0.071 G_A: 0.653 vgg: 1.405 
End of epoch 24 / 200 	 Time Taken: 29 sec
(epoch: 25, iters: 824, time: 0.035) D_A: 0.062 G_A: 0.721 vgg: 1.466 
saving the latest model (epoch 25, total_steps 20000)
saving the model at the end of epoch 25, iters 20000
End of epoch 25 / 200 	 Time Taken: 30 sec
(epoch: 26, iters: 825, time: 0.034) D_A: 0.154 G_A: 0.304 vgg: 1.566 
End of epoch 26 / 200 	 Time Taken: 28 sec
(epoch: 27, iters: 826, time: 0.047) D_A: 0.212 G_A: 0.263 vgg: 1.634 
End of epoch 27 / 200 	 Time Taken: 29 sec
(epoch: 28, iters: 827, time: 0.034) D_A: 0.221 G_A: 0.244 vgg: 1.567 
End of epoch 28 / 200 	 Time Taken: 28 sec
(epoch: 29, iters: 828, time: 0.034) D_A: 0.149 G_A: 0.371 vgg: 1.551 
End of epoch 29 / 200 	 Time Taken: 29 sec
(epoch: 30, iters: 829, time: 0.047) D_A: 0.093 G_A: 0.725 vgg: 1.542 
saving the model at the end of epoch 30, iters 24000
End of epoch 30 / 200 	 Time Taken: 29 sec
(epoch: 31, iters: 830, time: 0.035) D_A: 0.190 G_A: 0.346 vgg: 1.398 
End of epoch 31 / 200 	 Time Taken: 28 sec
(epoch: 32, iters: 831, time: 0.035) D_A: 0.161 G_A: 0.371 vgg: 1.397 
End of epoch 32 / 200 	 Time Taken: 29 sec
(epoch: 33, iters: 832, time: 0.047) D_A: 0.144 G_A: 0.534 vgg: 1.369 
End of epoch 33 / 200 	 Time Taken: 29 sec
(epoch: 34, iters: 833, time: 0.034) D_A: 0.095 G_A: 0.468 vgg: 1.403 
End of epoch 34 / 200 	 Time Taken: 29 sec
(epoch: 35, iters: 834, time: 0.034) D_A: 0.187 G_A: 0.187 vgg: 1.370 
saving the model at the end of epoch 35, iters 28000
End of epoch 35 / 200 	 Time Taken: 29 sec
(epoch: 36, iters: 835, time: 0.047) D_A: 0.151 G_A: 0.480 vgg: 1.403 
End of epoch 36 / 200 	 Time Taken: 29 sec
(epoch: 37, iters: 836, time: 0.034) D_A: 0.114 G_A: 0.507 vgg: 1.408 
End of epoch 37 / 200 	 Time Taken: 29 sec
(epoch: 38, iters: 837, time: 0.035) D_A: 0.130 G_A: 0.355 vgg: 1.305 
End of epoch 38 / 200 	 Time Taken: 29 sec
(epoch: 39, iters: 838, time: 0.047) D_A: 0.149 G_A: 0.495 vgg: 1.389 
End of epoch 39 / 200 	 Time Taken: 29 sec
(epoch: 40, iters: 839, time: 0.035) D_A: 0.160 G_A: 0.670 vgg: 1.333 
saving the model at the end of epoch 40, iters 32000
End of epoch 40 / 200 	 Time Taken: 29 sec
(epoch: 41, iters: 840, time: 0.035) D_A: 0.175 G_A: 0.779 vgg: 1.320 
End of epoch 41 / 200 	 Time Taken: 28 sec
(epoch: 42, iters: 841, time: 0.047) D_A: 0.145 G_A: 0.301 vgg: 1.341 
End of epoch 42 / 200 	 Time Taken: 29 sec
(epoch: 43, iters: 842, time: 0.035) D_A: 0.135 G_A: 0.374 vgg: 1.314 
End of epoch 43 / 200 	 Time Taken: 28 sec
(epoch: 44, iters: 843, time: 0.034) D_A: 0.177 G_A: 0.438 vgg: 1.340 
End of epoch 44 / 200 	 Time Taken: 29 sec
(epoch: 45, iters: 844, time: 0.047) D_A: 0.231 G_A: 0.471 vgg: 1.394 
saving the model at the end of epoch 45, iters 36000
End of epoch 45 / 200 	 Time Taken: 29 sec
(epoch: 46, iters: 845, time: 0.036) D_A: 0.122 G_A: 0.425 vgg: 1.324 
End of epoch 46 / 200 	 Time Taken: 28 sec
(epoch: 47, iters: 846, time: 0.034) D_A: 0.175 G_A: 0.403 vgg: 1.376 
End of epoch 47 / 200 	 Time Taken: 29 sec
(epoch: 48, iters: 847, time: 0.045) D_A: 0.167 G_A: 0.263 vgg: 1.392 
End of epoch 48 / 200 	 Time Taken: 29 sec
(epoch: 49, iters: 848, time: 0.035) D_A: 0.188 G_A: 0.307 vgg: 1.368 
End of epoch 49 / 200 	 Time Taken: 28 sec
(epoch: 50, iters: 849, time: 0.035) D_A: 0.191 G_A: 0.419 vgg: 1.378 
saving the latest model (epoch 50, total_steps 40000)
saving the model at the end of epoch 50, iters 40000
End of epoch 50 / 200 	 Time Taken: 30 sec
(epoch: 51, iters: 850, time: 0.049) D_A: 0.145 G_A: 0.352 vgg: 1.351 
End of epoch 51 / 200 	 Time Taken: 28 sec
(epoch: 52, iters: 851, time: 0.035) D_A: 0.202 G_A: 0.416 vgg: 1.357 
End of epoch 52 / 200 	 Time Taken: 28 sec
(epoch: 53, iters: 852, time: 0.035) D_A: 0.171 G_A: 0.325 vgg: 1.342 
End of epoch 53 / 200 	 Time Taken: 29 sec
(epoch: 54, iters: 853, time: 0.045) D_A: 0.103 G_A: 0.434 vgg: 1.295 
End of epoch 54 / 200 	 Time Taken: 29 sec
(epoch: 55, iters: 854, time: 0.034) D_A: 0.166 G_A: 0.308 vgg: 1.311 
saving the model at the end of epoch 55, iters 44000
End of epoch 55 / 200 	 Time Taken: 29 sec
(epoch: 56, iters: 855, time: 0.034) D_A: 0.126 G_A: 0.368 vgg: 1.358 
End of epoch 56 / 200 	 Time Taken: 28 sec
(epoch: 57, iters: 856, time: 0.046) D_A: 0.122 G_A: 0.316 vgg: 1.374 
End of epoch 57 / 200 	 Time Taken: 29 sec
(epoch: 58, iters: 857, time: 0.034) D_A: 0.105 G_A: 0.532 vgg: 1.378 
End of epoch 58 / 200 	 Time Taken: 28 sec
(epoch: 59, iters: 858, time: 0.034) D_A: 0.168 G_A: 0.374 vgg: 1.395 
End of epoch 59 / 200 	 Time Taken: 29 sec
(epoch: 60, iters: 859, time: 0.044) D_A: 0.157 G_A: 0.426 vgg: 1.334 
saving the model at the end of epoch 60, iters 48000
End of epoch 60 / 200 	 Time Taken: 29 sec
(epoch: 61, iters: 860, time: 0.034) D_A: 0.148 G_A: 0.390 vgg: 1.374 
End of epoch 61 / 200 	 Time Taken: 28 sec
(epoch: 62, iters: 861, time: 0.034) D_A: 0.165 G_A: 0.285 vgg: 1.353 
End of epoch 62 / 200 	 Time Taken: 29 sec
(epoch: 63, iters: 862, time: 0.047) D_A: 0.224 G_A: 0.435 vgg: 1.493 
End of epoch 63 / 200 	 Time Taken: 29 sec
(epoch: 64, iters: 863, time: 0.035) D_A: 0.129 G_A: 0.504 vgg: 1.400 
End of epoch 64 / 200 	 Time Taken: 28 sec
(epoch: 65, iters: 864, time: 0.035) D_A: 0.099 G_A: 0.586 vgg: 1.398 
saving the model at the end of epoch 65, iters 52000
End of epoch 65 / 200 	 Time Taken: 29 sec
(epoch: 66, iters: 865, time: 0.045) D_A: 0.117 G_A: 0.622 vgg: 1.360 
End of epoch 66 / 200 	 Time Taken: 28 sec
(epoch: 67, iters: 866, time: 0.035) D_A: 0.109 G_A: 0.372 vgg: 1.410 
End of epoch 67 / 200 	 Time Taken: 28 sec
(epoch: 68, iters: 867, time: 0.034) D_A: 0.113 G_A: 0.461 vgg: 1.365 
End of epoch 68 / 200 	 Time Taken: 29 sec
(epoch: 69, iters: 868, time: 0.048) D_A: 0.165 G_A: 0.460 vgg: 1.413 
End of epoch 69 / 200 	 Time Taken: 29 sec
(epoch: 70, iters: 869, time: 0.035) D_A: 0.591 G_A: 1.266 vgg: 1.383 
saving the model at the end of epoch 70, iters 56000
End of epoch 70 / 200 	 Time Taken: 29 sec
(epoch: 71, iters: 870, time: 0.034) D_A: 0.106 G_A: 0.480 vgg: 1.277 
End of epoch 71 / 200 	 Time Taken: 28 sec
(epoch: 72, iters: 871, time: 0.047) D_A: 0.151 G_A: 0.385 vgg: 1.374 
End of epoch 72 / 200 	 Time Taken: 29 sec
(epoch: 73, iters: 872, time: 0.034) D_A: 0.131 G_A: 0.402 vgg: 1.346 
End of epoch 73 / 200 	 Time Taken: 28 sec
(epoch: 74, iters: 873, time: 0.034) D_A: 0.145 G_A: 0.381 vgg: 1.361 
End of epoch 74 / 200 	 Time Taken: 29 sec
(epoch: 75, iters: 874, time: 0.044) D_A: 0.104 G_A: 0.478 vgg: 1.390 
saving the latest model (epoch 75, total_steps 60000)
saving the model at the end of epoch 75, iters 60000
End of epoch 75 / 200 	 Time Taken: 29 sec
(epoch: 76, iters: 875, time: 0.034) D_A: 0.181 G_A: 0.266 vgg: 1.416 
End of epoch 76 / 200 	 Time Taken: 28 sec
(epoch: 77, iters: 876, time: 0.034) D_A: 0.128 G_A: 0.597 vgg: 1.371 
End of epoch 77 / 200 	 Time Taken: 29 sec
(epoch: 78, iters: 877, time: 0.045) D_A: 0.074 G_A: 0.578 vgg: 1.388 
End of epoch 78 / 200 	 Time Taken: 29 sec
(epoch: 79, iters: 878, time: 0.034) D_A: 0.216 G_A: 0.553 vgg: 1.387 
End of epoch 79 / 200 	 Time Taken: 28 sec
(epoch: 80, iters: 879, time: 0.035) D_A: 0.205 G_A: 0.543 vgg: 1.381 
saving the model at the end of epoch 80, iters 64000
End of epoch 80 / 200 	 Time Taken: 29 sec
(epoch: 81, iters: 880, time: 0.046) D_A: 0.106 G_A: 0.374 vgg: 1.361 
End of epoch 81 / 200 	 Time Taken: 28 sec
(epoch: 82, iters: 881, time: 0.034) D_A: 0.143 G_A: 0.560 vgg: 1.381 
End of epoch 82 / 200 	 Time Taken: 28 sec
(epoch: 83, iters: 882, time: 0.034) D_A: 0.132 G_A: 0.471 vgg: 1.382 
End of epoch 83 / 200 	 Time Taken: 29 sec
(epoch: 84, iters: 883, time: 0.044) D_A: 0.155 G_A: 0.394 vgg: 1.432 
End of epoch 84 / 200 	 Time Taken: 29 sec
(epoch: 85, iters: 884, time: 0.034) D_A: 0.125 G_A: 0.506 vgg: 1.393 
saving the model at the end of epoch 85, iters 68000
End of epoch 85 / 200 	 Time Taken: 29 sec
(epoch: 86, iters: 885, time: 0.035) D_A: 0.104 G_A: 0.435 vgg: 1.416 
End of epoch 86 / 200 	 Time Taken: 29 sec
(epoch: 87, iters: 886, time: 0.046) D_A: 0.126 G_A: 0.489 vgg: 1.417 
End of epoch 87 / 200 	 Time Taken: 29 sec
(epoch: 88, iters: 887, time: 0.035) D_A: 0.146 G_A: 0.325 vgg: 1.373 
End of epoch 88 / 200 	 Time Taken: 28 sec
(epoch: 89, iters: 888, time: 0.034) D_A: 0.192 G_A: 0.437 vgg: 1.367 
End of epoch 89 / 200 	 Time Taken: 29 sec
(epoch: 90, iters: 889, time: 0.049) D_A: 0.151 G_A: 0.532 vgg: 1.376 
saving the model at the end of epoch 90, iters 72000
End of epoch 90 / 200 	 Time Taken: 29 sec
(epoch: 91, iters: 890, time: 0.034) D_A: 0.073 G_A: 0.547 vgg: 1.398 
End of epoch 91 / 200 	 Time Taken: 28 sec
(epoch: 92, iters: 891, time: 0.034) D_A: 0.107 G_A: 0.548 vgg: 1.375 
End of epoch 92 / 200 	 Time Taken: 29 sec
(epoch: 93, iters: 892, time: 0.045) D_A: 0.149 G_A: 0.390 vgg: 1.432 
End of epoch 93 / 200 	 Time Taken: 29 sec
(epoch: 94, iters: 893, time: 0.034) D_A: 0.146 G_A: 0.260 vgg: 1.480 
End of epoch 94 / 200 	 Time Taken: 28 sec
(epoch: 95, iters: 894, time: 0.034) D_A: 0.094 G_A: 0.567 vgg: 1.414 
saving the model at the end of epoch 95, iters 76000
End of epoch 95 / 200 	 Time Taken: 29 sec
(epoch: 96, iters: 895, time: 0.050) D_A: 0.080 G_A: 0.490 vgg: 1.422 
End of epoch 96 / 200 	 Time Taken: 29 sec
(epoch: 97, iters: 896, time: 0.035) D_A: 0.139 G_A: 0.521 vgg: 1.547 
End of epoch 97 / 200 	 Time Taken: 30 sec
(epoch: 98, iters: 897, time: 0.034) D_A: 0.132 G_A: 0.676 vgg: 1.567 
End of epoch 98 / 200 	 Time Taken: 29 sec
(epoch: 99, iters: 898, time: 0.044) D_A: 0.304 G_A: 0.761 vgg: 1.733 
End of epoch 99 / 200 	 Time Taken: 29 sec
(epoch: 100, iters: 899, time: 0.034) D_A: 0.172 G_A: 0.285 vgg: 1.668 
saving the latest model (epoch 100, total_steps 80000)
saving the model at the end of epoch 100, iters 80000
End of epoch 100 / 200 	 Time Taken: 29 sec
(epoch: 101, iters: 900, time: 0.034) D_A: 0.175 G_A: 0.473 vgg: 1.712 
End of epoch 101 / 200 	 Time Taken: 29 sec
update learning rate: 0.000100 -> 0.000099
(epoch: 102, iters: 901, time: 0.046) D_A: 0.168 G_A: 0.260 vgg: 1.681 
End of epoch 102 / 200 	 Time Taken: 29 sec
update learning rate: 0.000099 -> 0.000098
(epoch: 103, iters: 902, time: 0.034) D_A: 0.179 G_A: 0.403 vgg: 1.546 
End of epoch 103 / 200 	 Time Taken: 28 sec
update learning rate: 0.000098 -> 0.000097
(epoch: 104, iters: 903, time: 0.034) D_A: 0.112 G_A: 0.512 vgg: 1.469 
End of epoch 104 / 200 	 Time Taken: 29 sec
update learning rate: 0.000097 -> 0.000096
(epoch: 105, iters: 904, time: 0.046) D_A: 0.121 G_A: 0.381 vgg: 1.482 
saving the model at the end of epoch 105, iters 84000
End of epoch 105 / 200 	 Time Taken: 29 sec
update learning rate: 0.000096 -> 0.000095
(epoch: 106, iters: 905, time: 0.034) D_A: 0.089 G_A: 0.637 vgg: 1.369 
End of epoch 106 / 200 	 Time Taken: 28 sec
update learning rate: 0.000095 -> 0.000094
(epoch: 107, iters: 906, time: 0.035) D_A: 0.085 G_A: 0.477 vgg: 1.435 
End of epoch 107 / 200 	 Time Taken: 29 sec
update learning rate: 0.000094 -> 0.000093
(epoch: 108, iters: 907, time: 0.048) D_A: 0.258 G_A: 0.755 vgg: 1.462 
End of epoch 108 / 200 	 Time Taken: 29 sec
update learning rate: 0.000093 -> 0.000092
(epoch: 109, iters: 908, time: 0.034) D_A: 0.116 G_A: 0.589 vgg: 1.575 
End of epoch 109 / 200 	 Time Taken: 28 sec
update learning rate: 0.000092 -> 0.000091
(epoch: 110, iters: 909, time: 0.035) D_A: 0.144 G_A: 0.287 vgg: 1.472 
saving the model at the end of epoch 110, iters 88000
End of epoch 110 / 200 	 Time Taken: 29 sec
update learning rate: 0.000091 -> 0.000090
(epoch: 111, iters: 910, time: 0.046) D_A: 0.074 G_A: 0.505 vgg: 1.407 
End of epoch 111 / 200 	 Time Taken: 29 sec
update learning rate: 0.000090 -> 0.000089
(epoch: 112, iters: 911, time: 0.034) D_A: 0.140 G_A: 0.376 vgg: 1.550 
End of epoch 112 / 200 	 Time Taken: 29 sec
update learning rate: 0.000089 -> 0.000088
(epoch: 113, iters: 912, time: 0.034) D_A: 0.240 G_A: 0.437 vgg: 1.526 
End of epoch 113 / 200 	 Time Taken: 29 sec
update learning rate: 0.000088 -> 0.000087
(epoch: 114, iters: 913, time: 0.046) D_A: 0.099 G_A: 0.426 vgg: 1.472 
End of epoch 114 / 200 	 Time Taken: 29 sec
update learning rate: 0.000087 -> 0.000086
(epoch: 115, iters: 914, time: 0.034) D_A: 0.125 G_A: 0.795 vgg: 1.634 
saving the model at the end of epoch 115, iters 92000
End of epoch 115 / 200 	 Time Taken: 29 sec
update learning rate: 0.000086 -> 0.000085
(epoch: 116, iters: 915, time: 0.034) D_A: 0.111 G_A: 0.860 vgg: 1.660 
End of epoch 116 / 200 	 Time Taken: 29 sec
update learning rate: 0.000085 -> 0.000084
------------ Options -------------
batchSize: 32
beta1: 0.5
checkpoints_dir: ./checkpoints
config: configs/unit_gta2city_folder.yaml
continue_train: False
dataroot: /ssd1/yifan/hdr_unsuper_compete
dataset_mode: unaligned
display_freq: 30
display_id: 1
display_port: 9000
display_single_pane_ncols: 0
display_winsize: 256
fcn: 0
fineSize: 320
gpu_ids: [0, 1, 2, 3]
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: True
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
lr: 0.0001
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_bs32_synBN_hdr_unsuperdata_lsgan_vgg
ndf: 64
new_lr: False
ngf: 64
niter: 100
niter_decay: 100
no_dropout: True
no_flip: False
no_html: False
no_lsgan: False
norm: instance
output_nc: 3
phase: train
pool_size: 50
print_freq: 100
resize_or_crop: crop
save_epoch_freq: 5
save_latest_freq: 5000
serial_batches: False
skip: 0.0
syn_norm: False
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 1.0
which_direction: AtoB
which_epoch: latest
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
#training images = 799
single
---------- Networks initialized -------------
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
-----------------------------------------------
model [SingleGANModel] was created
create web directory ./checkpoints/single_unet_conv_bs32_synBN_hdr_unsuperdata_lsgan_vgg/web...
(epoch: 1, iters: 800, time: 0.034) D_A: 0.230 G_A: 0.756 vgg: 1.178 
End of epoch 1 / 200 	 Time Taken: 41 sec
------------ Options -------------
batchSize: 32
beta1: 0.5
checkpoints_dir: ./checkpoints
config: configs/unit_gta2city_folder.yaml
continue_train: False
dataroot: /ssd1/yifan/hdr_unsuper_compete
dataset_mode: unaligned
display_freq: 30
display_id: 1
display_port: 9000
display_single_pane_ncols: 0
display_winsize: 256
fcn: 0
fineSize: 320
gpu_ids: [0, 1, 2, 3]
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: True
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
lr: 0.0001
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_bs32_BN_hdr_unsuperdata_lsgan_vgg
ndf: 64
new_lr: False
ngf: 64
niter: 100
niter_decay: 100
no_dropout: True
no_flip: False
no_html: False
no_lsgan: False
norm: instance
output_nc: 3
phase: train
pool_size: 50
print_freq: 100
resize_or_crop: crop
save_epoch_freq: 5
save_latest_freq: 5000
serial_batches: False
skip: 0.0
syn_norm: False
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 1.0
which_direction: AtoB
which_epoch: latest
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
#training images = 799
single
---------- Networks initialized -------------
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
-----------------------------------------------
model [SingleGANModel] was created
create web directory ./checkpoints/single_unet_conv_bs32_BN_hdr_unsuperdata_lsgan_vgg/web...
(epoch: 1, iters: 800, time: 0.034) D_A: 0.221 G_A: 0.707 vgg: 1.134 
End of epoch 1 / 200 	 Time Taken: 42 sec
(epoch: 2, iters: 801, time: 0.034) D_A: 0.169 G_A: 0.699 vgg: 1.197 
End of epoch 2 / 200 	 Time Taken: 28 sec
(epoch: 3, iters: 802, time: 0.047) D_A: 0.212 G_A: 0.629 vgg: 1.232 
End of epoch 3 / 200 	 Time Taken: 29 sec
(epoch: 4, iters: 803, time: 0.035) D_A: 0.573 G_A: 1.331 vgg: 1.240 
End of epoch 4 / 200 	 Time Taken: 28 sec
(epoch: 5, iters: 804, time: 0.034) D_A: 0.436 G_A: 0.749 vgg: 1.223 
saving the model at the end of epoch 5, iters 4000
End of epoch 5 / 200 	 Time Taken: 29 sec
(epoch: 6, iters: 805, time: 0.046) D_A: 0.238 G_A: 0.531 vgg: 1.238 
End of epoch 6 / 200 	 Time Taken: 29 sec
(epoch: 7, iters: 806, time: 0.034) D_A: 0.188 G_A: 0.427 vgg: 1.246 
End of epoch 7 / 200 	 Time Taken: 29 sec
(epoch: 8, iters: 807, time: 0.035) D_A: 0.224 G_A: 0.562 vgg: 1.190 
End of epoch 8 / 200 	 Time Taken: 29 sec
(epoch: 9, iters: 808, time: 0.047) D_A: 0.186 G_A: 0.503 vgg: 1.203 
End of epoch 9 / 200 	 Time Taken: 29 sec
(epoch: 10, iters: 809, time: 0.035) D_A: 0.297 G_A: 0.532 vgg: 1.264 
saving the model at the end of epoch 10, iters 8000
End of epoch 10 / 200 	 Time Taken: 29 sec
(epoch: 11, iters: 810, time: 0.034) D_A: 0.137 G_A: 0.516 vgg: 1.247 
End of epoch 11 / 200 	 Time Taken: 29 sec
(epoch: 12, iters: 811, time: 0.045) D_A: 0.109 G_A: 0.558 vgg: 1.218 
End of epoch 12 / 200 	 Time Taken: 29 sec
(epoch: 13, iters: 812, time: 0.035) D_A: 0.107 G_A: 0.565 vgg: 1.233 
End of epoch 13 / 200 	 Time Taken: 28 sec
(epoch: 14, iters: 813, time: 0.034) D_A: 0.145 G_A: 0.363 vgg: 1.337 
End of epoch 14 / 200 	 Time Taken: 29 sec
(epoch: 15, iters: 814, time: 0.046) D_A: 0.197 G_A: 0.603 vgg: 1.398 
saving the model at the end of epoch 15, iters 12000
End of epoch 15 / 200 	 Time Taken: 29 sec
(epoch: 16, iters: 815, time: 0.034) D_A: 0.107 G_A: 0.547 vgg: 1.384 
End of epoch 16 / 200 	 Time Taken: 28 sec
(epoch: 17, iters: 816, time: 0.035) D_A: 0.155 G_A: 0.638 vgg: 1.501 
End of epoch 17 / 200 	 Time Taken: 29 sec
(epoch: 18, iters: 817, time: 0.047) D_A: 0.099 G_A: 0.592 vgg: 1.483 
End of epoch 18 / 200 	 Time Taken: 29 sec
(epoch: 19, iters: 818, time: 0.034) D_A: 0.136 G_A: 0.688 vgg: 1.452 
End of epoch 19 / 200 	 Time Taken: 29 sec
(epoch: 20, iters: 819, time: 0.034) D_A: 0.096 G_A: 0.622 vgg: 1.337 
saving the model at the end of epoch 20, iters 16000
End of epoch 20 / 200 	 Time Taken: 30 sec
(epoch: 21, iters: 820, time: 0.049) D_A: 0.088 G_A: 0.626 vgg: 1.427 
End of epoch 21 / 200 	 Time Taken: 28 sec
(epoch: 22, iters: 821, time: 0.035) D_A: 0.098 G_A: 0.765 vgg: 1.487 
End of epoch 22 / 200 	 Time Taken: 29 sec
(epoch: 23, iters: 822, time: 0.034) D_A: 0.075 G_A: 0.813 vgg: 1.502 
End of epoch 23 / 200 	 Time Taken: 29 sec
(epoch: 24, iters: 823, time: 0.048) D_A: 0.151 G_A: 0.939 vgg: 1.556 
End of epoch 24 / 200 	 Time Taken: 29 sec
(epoch: 25, iters: 824, time: 0.034) D_A: 0.089 G_A: 0.535 vgg: 1.602 
saving the latest model (epoch 25, total_steps 20000)
saving the model at the end of epoch 25, iters 20000
End of epoch 25 / 200 	 Time Taken: 30 sec
(epoch: 26, iters: 825, time: 0.034) D_A: 0.333 G_A: 0.188 vgg: 1.778 
End of epoch 26 / 200 	 Time Taken: 28 sec
(epoch: 27, iters: 826, time: 0.045) D_A: 0.272 G_A: 0.222 vgg: 1.779 
End of epoch 27 / 200 	 Time Taken: 29 sec
(epoch: 28, iters: 827, time: 0.034) D_A: 0.245 G_A: 0.298 vgg: 1.131 
End of epoch 28 / 200 	 Time Taken: 28 sec
(epoch: 29, iters: 828, time: 0.035) D_A: 0.243 G_A: 0.322 vgg: 0.889 
End of epoch 29 / 200 	 Time Taken: 29 sec
(epoch: 30, iters: 829, time: 0.047) D_A: 0.240 G_A: 0.330 vgg: 0.726 
saving the model at the end of epoch 30, iters 24000
End of epoch 30 / 200 	 Time Taken: 29 sec
(epoch: 31, iters: 830, time: 0.035) D_A: 0.230 G_A: 0.335 vgg: 0.619 
End of epoch 31 / 200 	 Time Taken: 28 sec
(epoch: 32, iters: 831, time: 0.034) D_A: 0.254 G_A: 0.291 vgg: 0.536 
End of epoch 32 / 200 	 Time Taken: 29 sec
(epoch: 33, iters: 832, time: 0.045) D_A: 0.246 G_A: 0.393 vgg: 0.519 
End of epoch 33 / 200 	 Time Taken: 29 sec
(epoch: 34, iters: 833, time: 0.034) D_A: 0.211 G_A: 0.343 vgg: 0.546 
End of epoch 34 / 200 	 Time Taken: 28 sec
(epoch: 35, iters: 834, time: 0.034) D_A: 0.236 G_A: 0.320 vgg: 0.523 
saving the model at the end of epoch 35, iters 28000
End of epoch 35 / 200 	 Time Taken: 29 sec
(epoch: 36, iters: 835, time: 0.047) D_A: 0.230 G_A: 0.420 vgg: 0.349 
End of epoch 36 / 200 	 Time Taken: 28 sec
(epoch: 37, iters: 836, time: 0.034) D_A: 0.208 G_A: 0.323 vgg: 0.425 
End of epoch 37 / 200 	 Time Taken: 28 sec
(epoch: 38, iters: 837, time: 0.035) D_A: 0.241 G_A: 0.393 vgg: 0.445 
End of epoch 38 / 200 	 Time Taken: 29 sec
(epoch: 39, iters: 838, time: 0.046) D_A: 0.238 G_A: 0.366 vgg: 0.401 
End of epoch 39 / 200 	 Time Taken: 29 sec
(epoch: 40, iters: 839, time: 0.035) D_A: 0.207 G_A: 0.290 vgg: 0.408 
saving the model at the end of epoch 40, iters 32000
End of epoch 40 / 200 	 Time Taken: 29 sec
(epoch: 41, iters: 840, time: 0.034) D_A: 0.230 G_A: 0.394 vgg: 0.407 
End of epoch 41 / 200 	 Time Taken: 29 sec
(epoch: 42, iters: 841, time: 0.044) D_A: 0.270 G_A: 0.230 vgg: 0.405 
End of epoch 42 / 200 	 Time Taken: 29 sec
(epoch: 43, iters: 842, time: 0.035) D_A: 0.224 G_A: 0.369 vgg: 0.381 
End of epoch 43 / 200 	 Time Taken: 29 sec
(epoch: 44, iters: 843, time: 0.035) D_A: 0.247 G_A: 0.457 vgg: 0.320 
End of epoch 44 / 200 	 Time Taken: 29 sec
(epoch: 45, iters: 844, time: 0.048) D_A: 0.188 G_A: 0.362 vgg: 0.461 
saving the model at the end of epoch 45, iters 36000
End of epoch 45 / 200 	 Time Taken: 30 sec
(epoch: 46, iters: 845, time: 0.034) D_A: 0.235 G_A: 0.341 vgg: 0.385 
End of epoch 46 / 200 	 Time Taken: 28 sec
(epoch: 47, iters: 846, time: 0.034) D_A: 0.229 G_A: 0.244 vgg: 0.374 
End of epoch 47 / 200 	 Time Taken: 29 sec
(epoch: 48, iters: 847, time: 0.047) D_A: 0.285 G_A: 0.573 vgg: 0.383 
End of epoch 48 / 200 	 Time Taken: 29 sec
(epoch: 49, iters: 848, time: 0.035) D_A: 0.208 G_A: 0.312 vgg: 0.339 
End of epoch 49 / 200 	 Time Taken: 28 sec
(epoch: 50, iters: 849, time: 0.035) D_A: 0.207 G_A: 0.359 vgg: 0.365 
saving the latest model (epoch 50, total_steps 40000)
saving the model at the end of epoch 50, iters 40000
End of epoch 50 / 200 	 Time Taken: 29 sec
(epoch: 51, iters: 850, time: 0.044) D_A: 0.216 G_A: 0.373 vgg: 0.333 
End of epoch 51 / 200 	 Time Taken: 28 sec
(epoch: 52, iters: 851, time: 0.034) D_A: 0.189 G_A: 0.394 vgg: 0.322 
End of epoch 52 / 200 	 Time Taken: 29 sec
(epoch: 53, iters: 852, time: 0.035) D_A: 0.202 G_A: 0.319 vgg: 0.310 
End of epoch 53 / 200 	 Time Taken: 29 sec
(epoch: 54, iters: 853, time: 0.044) D_A: 0.193 G_A: 0.321 vgg: 0.393 
End of epoch 54 / 200 	 Time Taken: 29 sec
(epoch: 55, iters: 854, time: 0.034) D_A: 0.248 G_A: 0.436 vgg: 0.343 
saving the model at the end of epoch 55, iters 44000
End of epoch 55 / 200 	 Time Taken: 29 sec
(epoch: 56, iters: 855, time: 0.034) D_A: 0.240 G_A: 0.650 vgg: 0.321 
End of epoch 56 / 200 	 Time Taken: 29 sec
(epoch: 57, iters: 856, time: 0.048) D_A: 0.204 G_A: 0.328 vgg: 0.354 
End of epoch 57 / 200 	 Time Taken: 29 sec
(epoch: 58, iters: 857, time: 0.034) D_A: 0.213 G_A: 0.276 vgg: 0.335 
End of epoch 58 / 200 	 Time Taken: 29 sec
(epoch: 59, iters: 858, time: 0.034) D_A: 0.238 G_A: 0.244 vgg: 0.301 
End of epoch 59 / 200 	 Time Taken: 29 sec
(epoch: 60, iters: 859, time: 0.044) D_A: 0.217 G_A: 0.441 vgg: 0.327 
saving the model at the end of epoch 60, iters 48000
End of epoch 60 / 200 	 Time Taken: 29 sec
(epoch: 61, iters: 860, time: 0.034) D_A: 0.221 G_A: 0.369 vgg: 0.327 
End of epoch 61 / 200 	 Time Taken: 28 sec
(epoch: 62, iters: 861, time: 0.035) D_A: 0.250 G_A: 0.424 vgg: 0.313 
End of epoch 62 / 200 	 Time Taken: 29 sec
(epoch: 63, iters: 862, time: 0.043) D_A: 0.233 G_A: 0.441 vgg: 0.268 
End of epoch 63 / 200 	 Time Taken: 29 sec
(epoch: 64, iters: 863, time: 0.035) D_A: 0.234 G_A: 0.400 vgg: 0.322 
End of epoch 64 / 200 	 Time Taken: 28 sec
(epoch: 65, iters: 864, time: 0.034) D_A: 0.201 G_A: 0.360 vgg: 0.341 
saving the model at the end of epoch 65, iters 52000
End of epoch 65 / 200 	 Time Taken: 29 sec
(epoch: 66, iters: 865, time: 0.049) D_A: 0.197 G_A: 0.253 vgg: 0.285 
End of epoch 66 / 200 	 Time Taken: 29 sec
(epoch: 67, iters: 866, time: 0.034) D_A: 0.189 G_A: 0.420 vgg: 0.312 
End of epoch 67 / 200 	 Time Taken: 28 sec
(epoch: 68, iters: 867, time: 0.034) D_A: 0.206 G_A: 0.348 vgg: 0.264 
End of epoch 68 / 200 	 Time Taken: 29 sec
(epoch: 69, iters: 868, time: 0.045) D_A: 0.204 G_A: 0.307 vgg: 0.290 
End of epoch 69 / 200 	 Time Taken: 29 sec
(epoch: 70, iters: 869, time: 0.034) D_A: 0.210 G_A: 0.358 vgg: 0.302 
saving the model at the end of epoch 70, iters 56000
End of epoch 70 / 200 	 Time Taken: 29 sec
(epoch: 71, iters: 870, time: 0.034) D_A: 0.185 G_A: 0.375 vgg: 0.313 
End of epoch 71 / 200 	 Time Taken: 28 sec
(epoch: 72, iters: 871, time: 0.048) D_A: 0.204 G_A: 0.430 vgg: 0.256 
End of epoch 72 / 200 	 Time Taken: 29 sec
(epoch: 73, iters: 872, time: 0.034) D_A: 0.215 G_A: 0.288 vgg: 0.277 
End of epoch 73 / 200 	 Time Taken: 29 sec
(epoch: 74, iters: 873, time: 0.034) D_A: 0.199 G_A: 0.307 vgg: 0.319 
End of epoch 74 / 200 	 Time Taken: 29 sec
(epoch: 75, iters: 874, time: 0.046) D_A: 0.274 G_A: 0.684 vgg: 0.290 
saving the latest model (epoch 75, total_steps 60000)
saving the model at the end of epoch 75, iters 60000
End of epoch 75 / 200 	 Time Taken: 30 sec
(epoch: 76, iters: 875, time: 0.034) D_A: 0.258 G_A: 0.373 vgg: 0.292 
End of epoch 76 / 200 	 Time Taken: 28 sec
(epoch: 77, iters: 876, time: 0.034) D_A: 0.222 G_A: 0.447 vgg: 0.292 
End of epoch 77 / 200 	 Time Taken: 29 sec
(epoch: 78, iters: 877, time: 0.046) D_A: 0.209 G_A: 0.392 vgg: 0.276 
End of epoch 78 / 200 	 Time Taken: 29 sec
(epoch: 79, iters: 878, time: 0.034) D_A: 0.226 G_A: 0.350 vgg: 0.276 
End of epoch 79 / 200 	 Time Taken: 29 sec
(epoch: 80, iters: 879, time: 0.034) D_A: 0.216 G_A: 0.387 vgg: 0.258 
saving the model at the end of epoch 80, iters 64000
End of epoch 80 / 200 	 Time Taken: 29 sec
(epoch: 81, iters: 880, time: 0.045) D_A: 0.214 G_A: 0.292 vgg: 0.263 
End of epoch 81 / 200 	 Time Taken: 28 sec
(epoch: 82, iters: 881, time: 0.034) D_A: 0.211 G_A: 0.354 vgg: 0.312 
End of epoch 82 / 200 	 Time Taken: 29 sec
(epoch: 83, iters: 882, time: 0.034) D_A: 0.189 G_A: 0.273 vgg: 0.261 
End of epoch 83 / 200 	 Time Taken: 29 sec
(epoch: 84, iters: 883, time: 0.046) D_A: 0.219 G_A: 0.303 vgg: 0.271 
End of epoch 84 / 200 	 Time Taken: 29 sec
(epoch: 85, iters: 884, time: 0.035) D_A: 0.193 G_A: 0.302 vgg: 0.319 
saving the model at the end of epoch 85, iters 68000
End of epoch 85 / 200 	 Time Taken: 29 sec
(epoch: 86, iters: 885, time: 0.035) D_A: 0.203 G_A: 0.473 vgg: 0.283 
End of epoch 86 / 200 	 Time Taken: 29 sec
(epoch: 87, iters: 886, time: 0.048) D_A: 0.235 G_A: 0.233 vgg: 0.306 
End of epoch 87 / 200 	 Time Taken: 29 sec
(epoch: 88, iters: 887, time: 0.034) D_A: 0.224 G_A: 0.467 vgg: 0.260 
End of epoch 88 / 200 	 Time Taken: 29 sec
(epoch: 89, iters: 888, time: 0.034) D_A: 0.180 G_A: 0.393 vgg: 0.256 
End of epoch 89 / 200 	 Time Taken: 29 sec
(epoch: 90, iters: 889, time: 0.045) D_A: 0.170 G_A: 0.414 vgg: 0.253 
saving the model at the end of epoch 90, iters 72000
End of epoch 90 / 200 	 Time Taken: 29 sec
(epoch: 91, iters: 890, time: 0.034) D_A: 0.221 G_A: 0.433 vgg: 0.314 
End of epoch 91 / 200 	 Time Taken: 28 sec
(epoch: 92, iters: 891, time: 0.034) D_A: 0.232 G_A: 0.366 vgg: 0.266 
End of epoch 92 / 200 	 Time Taken: 29 sec
(epoch: 93, iters: 892, time: 0.045) D_A: 0.174 G_A: 0.315 vgg: 0.295 
End of epoch 93 / 200 	 Time Taken: 29 sec
(epoch: 94, iters: 893, time: 0.035) D_A: 0.197 G_A: 0.431 vgg: 0.241 
End of epoch 94 / 200 	 Time Taken: 28 sec
(epoch: 95, iters: 894, time: 0.035) D_A: 0.183 G_A: 0.302 vgg: 0.314 
saving the model at the end of epoch 95, iters 76000
End of epoch 95 / 200 	 Time Taken: 29 sec
(epoch: 96, iters: 895, time: 0.046) D_A: 0.209 G_A: 0.413 vgg: 0.246 
End of epoch 96 / 200 	 Time Taken: 28 sec
(epoch: 97, iters: 896, time: 0.034) D_A: 0.239 G_A: 0.503 vgg: 0.263 
End of epoch 97 / 200 	 Time Taken: 28 sec
(epoch: 98, iters: 897, time: 0.034) D_A: 0.203 G_A: 0.613 vgg: 0.273 
End of epoch 98 / 200 	 Time Taken: 29 sec
(epoch: 99, iters: 898, time: 0.046) D_A: 0.181 G_A: 0.386 vgg: 0.237 
End of epoch 99 / 200 	 Time Taken: 29 sec
(epoch: 100, iters: 899, time: 0.035) D_A: 0.213 G_A: 0.618 vgg: 0.296 
saving the latest model (epoch 100, total_steps 80000)
saving the model at the end of epoch 100, iters 80000
End of epoch 100 / 200 	 Time Taken: 29 sec
(epoch: 101, iters: 900, time: 0.034) D_A: 0.219 G_A: 0.359 vgg: 0.205 
End of epoch 101 / 200 	 Time Taken: 29 sec
update learning rate: 0.000100 -> 0.000099
(epoch: 102, iters: 901, time: 0.045) D_A: 0.152 G_A: 0.474 vgg: 0.221 
End of epoch 102 / 200 	 Time Taken: 29 sec
update learning rate: 0.000099 -> 0.000098
(epoch: 103, iters: 902, time: 0.034) D_A: 0.174 G_A: 0.326 vgg: 0.255 
End of epoch 103 / 200 	 Time Taken: 28 sec
update learning rate: 0.000098 -> 0.000097
(epoch: 104, iters: 903, time: 0.034) D_A: 0.183 G_A: 0.437 vgg: 0.345 
End of epoch 104 / 200 	 Time Taken: 29 sec
update learning rate: 0.000097 -> 0.000096
(epoch: 105, iters: 904, time: 0.047) D_A: 0.211 G_A: 0.296 vgg: 0.296 
saving the model at the end of epoch 105, iters 84000
End of epoch 105 / 200 	 Time Taken: 29 sec
update learning rate: 0.000096 -> 0.000095
(epoch: 106, iters: 905, time: 0.034) D_A: 0.194 G_A: 0.329 vgg: 0.279 
End of epoch 106 / 200 	 Time Taken: 28 sec
update learning rate: 0.000095 -> 0.000094
(epoch: 107, iters: 906, time: 0.036) D_A: 0.205 G_A: 0.217 vgg: 0.269 
End of epoch 107 / 200 	 Time Taken: 29 sec
update learning rate: 0.000094 -> 0.000093
(epoch: 108, iters: 907, time: 0.045) D_A: 0.214 G_A: 0.588 vgg: 0.365 
End of epoch 108 / 200 	 Time Taken: 29 sec
update learning rate: 0.000093 -> 0.000092
(epoch: 109, iters: 908, time: 0.034) D_A: 0.152 G_A: 0.473 vgg: 0.278 
End of epoch 109 / 200 	 Time Taken: 28 sec
update learning rate: 0.000092 -> 0.000091
(epoch: 110, iters: 909, time: 0.035) D_A: 0.210 G_A: 0.430 vgg: 0.302 
saving the model at the end of epoch 110, iters 88000
End of epoch 110 / 200 	 Time Taken: 29 sec
update learning rate: 0.000091 -> 0.000090
(epoch: 111, iters: 910, time: 0.047) D_A: 0.196 G_A: 0.300 vgg: 0.254 
End of epoch 111 / 200 	 Time Taken: 29 sec
update learning rate: 0.000090 -> 0.000089
(epoch: 112, iters: 911, time: 0.035) D_A: 0.187 G_A: 0.424 vgg: 0.316 
End of epoch 112 / 200 	 Time Taken: 28 sec
update learning rate: 0.000089 -> 0.000088
(epoch: 113, iters: 912, time: 0.034) D_A: 0.182 G_A: 0.334 vgg: 0.273 
End of epoch 113 / 200 	 Time Taken: 29 sec
update learning rate: 0.000088 -> 0.000087
(epoch: 114, iters: 913, time: 0.046) D_A: 0.178 G_A: 0.355 vgg: 0.275 
End of epoch 114 / 200 	 Time Taken: 29 sec
update learning rate: 0.000087 -> 0.000086
(epoch: 115, iters: 914, time: 0.034) D_A: 0.219 G_A: 0.483 vgg: 0.250 
saving the model at the end of epoch 115, iters 92000
End of epoch 115 / 200 	 Time Taken: 29 sec
update learning rate: 0.000086 -> 0.000085
(epoch: 116, iters: 915, time: 0.034) D_A: 0.186 G_A: 0.494 vgg: 0.278 
End of epoch 116 / 200 	 Time Taken: 28 sec
update learning rate: 0.000085 -> 0.000084
(epoch: 117, iters: 916, time: 0.045) D_A: 0.192 G_A: 0.399 vgg: 0.271 
End of epoch 117 / 200 	 Time Taken: 29 sec
update learning rate: 0.000084 -> 0.000083
(epoch: 118, iters: 917, time: 0.034) D_A: 0.167 G_A: 0.463 vgg: 0.283 
End of epoch 118 / 200 	 Time Taken: 29 sec
update learning rate: 0.000083 -> 0.000082
(epoch: 119, iters: 918, time: 0.035) D_A: 0.169 G_A: 0.472 vgg: 0.267 
End of epoch 119 / 200 	 Time Taken: 29 sec
update learning rate: 0.000082 -> 0.000081
(epoch: 120, iters: 919, time: 0.045) D_A: 0.177 G_A: 0.415 vgg: 0.299 
saving the model at the end of epoch 120, iters 96000
End of epoch 120 / 200 	 Time Taken: 29 sec
update learning rate: 0.000081 -> 0.000080
(epoch: 121, iters: 920, time: 0.034) D_A: 0.206 G_A: 0.433 vgg: 0.305 
End of epoch 121 / 200 	 Time Taken: 28 sec
update learning rate: 0.000080 -> 0.000079
(epoch: 122, iters: 921, time: 0.035) D_A: 0.214 G_A: 0.358 vgg: 0.305 
End of epoch 122 / 200 	 Time Taken: 29 sec
update learning rate: 0.000079 -> 0.000078
(epoch: 123, iters: 922, time: 0.048) D_A: 0.207 G_A: 0.492 vgg: 0.288 
End of epoch 123 / 200 	 Time Taken: 29 sec
update learning rate: 0.000078 -> 0.000077
(epoch: 124, iters: 923, time: 0.034) D_A: 0.203 G_A: 0.399 vgg: 0.321 
End of epoch 124 / 200 	 Time Taken: 28 sec
update learning rate: 0.000077 -> 0.000076
(epoch: 125, iters: 924, time: 0.034) D_A: 0.195 G_A: 0.507 vgg: 0.300 
saving the latest model (epoch 125, total_steps 100000)
saving the model at the end of epoch 125, iters 100000
End of epoch 125 / 200 	 Time Taken: 31 sec
update learning rate: 0.000076 -> 0.000075
(epoch: 126, iters: 925, time: 0.048) D_A: 0.255 G_A: 0.427 vgg: 0.222 
End of epoch 126 / 200 	 Time Taken: 28 sec
update learning rate: 0.000075 -> 0.000074
(epoch: 127, iters: 926, time: 0.034) D_A: 0.210 G_A: 0.406 vgg: 0.269 
End of epoch 127 / 200 	 Time Taken: 29 sec
update learning rate: 0.000074 -> 0.000073
(epoch: 128, iters: 927, time: 0.035) D_A: 0.201 G_A: 0.539 vgg: 0.273 
End of epoch 128 / 200 	 Time Taken: 29 sec
update learning rate: 0.000073 -> 0.000072
(epoch: 129, iters: 928, time: 0.047) D_A: 0.167 G_A: 0.410 vgg: 0.260 
End of epoch 129 / 200 	 Time Taken: 29 sec
update learning rate: 0.000072 -> 0.000071
(epoch: 130, iters: 929, time: 0.034) D_A: 0.145 G_A: 0.364 vgg: 0.239 
saving the model at the end of epoch 130, iters 104000
End of epoch 130 / 200 	 Time Taken: 29 sec
update learning rate: 0.000071 -> 0.000070
(epoch: 131, iters: 930, time: 0.034) D_A: 0.207 G_A: 0.411 vgg: 0.323 
End of epoch 131 / 200 	 Time Taken: 29 sec
update learning rate: 0.000070 -> 0.000069
(epoch: 132, iters: 931, time: 0.050) D_A: 0.172 G_A: 0.461 vgg: 0.286 
End of epoch 132 / 200 	 Time Taken: 29 sec
update learning rate: 0.000069 -> 0.000068
(epoch: 133, iters: 932, time: 0.034) D_A: 0.176 G_A: 0.417 vgg: 0.323 
End of epoch 133 / 200 	 Time Taken: 29 sec
update learning rate: 0.000068 -> 0.000067
(epoch: 134, iters: 933, time: 0.034) D_A: 0.174 G_A: 0.314 vgg: 0.232 
End of epoch 134 / 200 	 Time Taken: 29 sec
update learning rate: 0.000067 -> 0.000066
(epoch: 135, iters: 934, time: 0.045) D_A: 0.211 G_A: 0.413 vgg: 0.219 
saving the model at the end of epoch 135, iters 108000
End of epoch 135 / 200 	 Time Taken: 29 sec
update learning rate: 0.000066 -> 0.000065
(epoch: 136, iters: 935, time: 0.034) D_A: 0.170 G_A: 0.364 vgg: 0.306 
End of epoch 136 / 200 	 Time Taken: 28 sec
update learning rate: 0.000065 -> 0.000064
(epoch: 137, iters: 936, time: 0.036) D_A: 0.183 G_A: 0.615 vgg: 0.220 
End of epoch 137 / 200 	 Time Taken: 29 sec
update learning rate: 0.000064 -> 0.000063
(epoch: 138, iters: 937, time: 0.044) D_A: 0.211 G_A: 0.430 vgg: 0.273 
End of epoch 138 / 200 	 Time Taken: 29 sec
update learning rate: 0.000063 -> 0.000062
(epoch: 139, iters: 938, time: 0.034) D_A: 0.190 G_A: 0.655 vgg: 0.316 
End of epoch 139 / 200 	 Time Taken: 28 sec
update learning rate: 0.000062 -> 0.000061
(epoch: 140, iters: 939, time: 0.035) D_A: 0.183 G_A: 0.522 vgg: 0.267 
saving the model at the end of epoch 140, iters 112000
End of epoch 140 / 200 	 Time Taken: 29 sec
update learning rate: 0.000061 -> 0.000060
(epoch: 141, iters: 940, time: 0.047) D_A: 0.194 G_A: 0.401 vgg: 0.338 
End of epoch 141 / 200 	 Time Taken: 28 sec
update learning rate: 0.000060 -> 0.000059
(epoch: 142, iters: 941, time: 0.034) D_A: 0.152 G_A: 0.438 vgg: 0.270 
End of epoch 142 / 200 	 Time Taken: 28 sec
update learning rate: 0.000059 -> 0.000058
(epoch: 143, iters: 942, time: 0.035) D_A: 0.214 G_A: 0.418 vgg: 0.309 
End of epoch 143 / 200 	 Time Taken: 29 sec
update learning rate: 0.000058 -> 0.000057
(epoch: 144, iters: 943, time: 0.047) D_A: 0.222 G_A: 0.425 vgg: 0.295 
End of epoch 144 / 200 	 Time Taken: 29 sec
update learning rate: 0.000057 -> 0.000056
(epoch: 145, iters: 944, time: 0.034) D_A: 0.182 G_A: 0.358 vgg: 0.192 
saving the model at the end of epoch 145, iters 116000
End of epoch 145 / 200 	 Time Taken: 29 sec
update learning rate: 0.000056 -> 0.000055
(epoch: 146, iters: 945, time: 0.035) D_A: 0.200 G_A: 0.312 vgg: 0.238 
End of epoch 146 / 200 	 Time Taken: 29 sec
update learning rate: 0.000055 -> 0.000054
(epoch: 147, iters: 946, time: 0.047) D_A: 0.170 G_A: 0.357 vgg: 0.284 
End of epoch 147 / 200 	 Time Taken: 29 sec
update learning rate: 0.000054 -> 0.000053
(epoch: 148, iters: 947, time: 0.034) D_A: 0.209 G_A: 0.575 vgg: 0.304 
End of epoch 148 / 200 	 Time Taken: 28 sec
update learning rate: 0.000053 -> 0.000052
(epoch: 149, iters: 948, time: 0.035) D_A: 0.191 G_A: 0.432 vgg: 0.236 
End of epoch 149 / 200 	 Time Taken: 29 sec
update learning rate: 0.000052 -> 0.000051
(epoch: 150, iters: 949, time: 0.047) D_A: 0.189 G_A: 0.398 vgg: 0.251 
saving the latest model (epoch 150, total_steps 120000)
saving the model at the end of epoch 150, iters 120000
End of epoch 150 / 200 	 Time Taken: 29 sec
update learning rate: 0.000051 -> 0.000050
(epoch: 151, iters: 950, time: 0.034) D_A: 0.183 G_A: 0.466 vgg: 0.262 
End of epoch 151 / 200 	 Time Taken: 28 sec
update learning rate: 0.000050 -> 0.000049
(epoch: 152, iters: 951, time: 0.034) D_A: 0.163 G_A: 0.389 vgg: 0.270 
End of epoch 152 / 200 	 Time Taken: 29 sec
update learning rate: 0.000049 -> 0.000048
(epoch: 153, iters: 952, time: 0.046) D_A: 0.210 G_A: 0.501 vgg: 0.309 
End of epoch 153 / 200 	 Time Taken: 29 sec
update learning rate: 0.000048 -> 0.000047
(epoch: 154, iters: 953, time: 0.034) D_A: 0.191 G_A: 0.369 vgg: 0.371 
End of epoch 154 / 200 	 Time Taken: 29 sec
update learning rate: 0.000047 -> 0.000046
(epoch: 155, iters: 954, time: 0.035) D_A: 0.151 G_A: 0.407 vgg: 0.275 
saving the model at the end of epoch 155, iters 124000
End of epoch 155 / 200 	 Time Taken: 29 sec
update learning rate: 0.000046 -> 0.000045
(epoch: 156, iters: 955, time: 0.047) D_A: 0.157 G_A: 0.386 vgg: 0.296 
End of epoch 156 / 200 	 Time Taken: 29 sec
update learning rate: 0.000045 -> 0.000044
(epoch: 157, iters: 956, time: 0.035) D_A: 0.197 G_A: 0.509 vgg: 0.279 
End of epoch 157 / 200 	 Time Taken: 29 sec
update learning rate: 0.000044 -> 0.000043
(epoch: 158, iters: 957, time: 0.034) D_A: 0.173 G_A: 0.400 vgg: 0.313 
End of epoch 158 / 200 	 Time Taken: 29 sec
update learning rate: 0.000043 -> 0.000042
(epoch: 159, iters: 958, time: 0.049) D_A: 0.204 G_A: 0.498 vgg: 0.368 
End of epoch 159 / 200 	 Time Taken: 29 sec
update learning rate: 0.000042 -> 0.000041
(epoch: 160, iters: 959, time: 0.034) D_A: 0.208 G_A: 0.330 vgg: 0.220 
saving the model at the end of epoch 160, iters 128000
End of epoch 160 / 200 	 Time Taken: 29 sec
update learning rate: 0.000041 -> 0.000040
(epoch: 161, iters: 960, time: 0.035) D_A: 0.205 G_A: 0.444 vgg: 0.299 
End of epoch 161 / 200 	 Time Taken: 29 sec
update learning rate: 0.000040 -> 0.000039
(epoch: 162, iters: 961, time: 0.045) D_A: 0.193 G_A: 0.435 vgg: 0.239 
End of epoch 162 / 200 	 Time Taken: 29 sec
update learning rate: 0.000039 -> 0.000038
(epoch: 163, iters: 962, time: 0.034) D_A: 0.145 G_A: 0.462 vgg: 0.278 
End of epoch 163 / 200 	 Time Taken: 28 sec
update learning rate: 0.000038 -> 0.000037
(epoch: 164, iters: 963, time: 0.034) D_A: 0.193 G_A: 0.369 vgg: 0.268 
End of epoch 164 / 200 	 Time Taken: 29 sec
update learning rate: 0.000037 -> 0.000036
(epoch: 165, iters: 964, time: 0.047) D_A: 0.176 G_A: 0.320 vgg: 0.281 
saving the model at the end of epoch 165, iters 132000
End of epoch 165 / 200 	 Time Taken: 30 sec
update learning rate: 0.000036 -> 0.000035
(epoch: 166, iters: 965, time: 0.034) D_A: 0.183 G_A: 0.384 vgg: 0.298 
End of epoch 166 / 200 	 Time Taken: 28 sec
update learning rate: 0.000035 -> 0.000034
(epoch: 167, iters: 966, time: 0.035) D_A: 0.187 G_A: 0.312 vgg: 0.255 
End of epoch 167 / 200 	 Time Taken: 29 sec
update learning rate: 0.000034 -> 0.000033
(epoch: 168, iters: 967, time: 0.050) D_A: 0.165 G_A: 0.402 vgg: 0.263 
End of epoch 168 / 200 	 Time Taken: 29 sec
update learning rate: 0.000033 -> 0.000032
(epoch: 169, iters: 968, time: 0.034) D_A: 0.199 G_A: 0.537 vgg: 0.303 
End of epoch 169 / 200 	 Time Taken: 28 sec
update learning rate: 0.000032 -> 0.000031
(epoch: 170, iters: 969, time: 0.034) D_A: 0.172 G_A: 0.353 vgg: 0.276 
saving the model at the end of epoch 170, iters 136000
End of epoch 170 / 200 	 Time Taken: 29 sec
update learning rate: 0.000031 -> 0.000030
(epoch: 171, iters: 970, time: 0.048) D_A: 0.200 G_A: 0.411 vgg: 0.264 
End of epoch 171 / 200 	 Time Taken: 29 sec
update learning rate: 0.000030 -> 0.000029
(epoch: 172, iters: 971, time: 0.034) D_A: 0.199 G_A: 0.498 vgg: 0.282 
End of epoch 172 / 200 	 Time Taken: 29 sec
update learning rate: 0.000029 -> 0.000028
(epoch: 173, iters: 972, time: 0.034) D_A: 0.182 G_A: 0.419 vgg: 0.314 
End of epoch 173 / 200 	 Time Taken: 29 sec
update learning rate: 0.000028 -> 0.000027
(epoch: 174, iters: 973, time: 0.049) D_A: 0.175 G_A: 0.336 vgg: 0.308 
End of epoch 174 / 200 	 Time Taken: 29 sec
update learning rate: 0.000027 -> 0.000026
(epoch: 175, iters: 974, time: 0.034) D_A: 0.186 G_A: 0.443 vgg: 0.294 
saving the latest model (epoch 175, total_steps 140000)
saving the model at the end of epoch 175, iters 140000
End of epoch 175 / 200 	 Time Taken: 29 sec
update learning rate: 0.000026 -> 0.000025
(epoch: 176, iters: 975, time: 0.037) D_A: 0.213 G_A: 0.391 vgg: 0.259 
End of epoch 176 / 200 	 Time Taken: 29 sec
update learning rate: 0.000025 -> 0.000024
(epoch: 177, iters: 976, time: 0.050) D_A: 0.177 G_A: 0.505 vgg: 0.329 
End of epoch 177 / 200 	 Time Taken: 29 sec
update learning rate: 0.000024 -> 0.000023
(epoch: 178, iters: 977, time: 0.035) D_A: 0.180 G_A: 0.440 vgg: 0.323 
End of epoch 178 / 200 	 Time Taken: 29 sec
update learning rate: 0.000023 -> 0.000022
(epoch: 179, iters: 978, time: 0.034) D_A: 0.182 G_A: 0.409 vgg: 0.223 
End of epoch 179 / 200 	 Time Taken: 29 sec
update learning rate: 0.000022 -> 0.000021
(epoch: 180, iters: 979, time: 0.049) D_A: 0.198 G_A: 0.419 vgg: 0.283 
saving the model at the end of epoch 180, iters 144000
End of epoch 180 / 200 	 Time Taken: 29 sec
update learning rate: 0.000021 -> 0.000020
(epoch: 181, iters: 980, time: 0.035) D_A: 0.174 G_A: 0.372 vgg: 0.375 
End of epoch 181 / 200 	 Time Taken: 28 sec
update learning rate: 0.000020 -> 0.000019
(epoch: 182, iters: 981, time: 0.035) D_A: 0.180 G_A: 0.376 vgg: 0.302 
End of epoch 182 / 200 	 Time Taken: 29 sec
update learning rate: 0.000019 -> 0.000018
(epoch: 183, iters: 982, time: 0.049) D_A: 0.170 G_A: 0.411 vgg: 0.318 
End of epoch 183 / 200 	 Time Taken: 29 sec
update learning rate: 0.000018 -> 0.000017
(epoch: 184, iters: 983, time: 0.034) D_A: 0.165 G_A: 0.381 vgg: 0.343 
End of epoch 184 / 200 	 Time Taken: 28 sec
update learning rate: 0.000017 -> 0.000016
(epoch: 185, iters: 984, time: 0.035) D_A: 0.152 G_A: 0.475 vgg: 0.305 
saving the model at the end of epoch 185, iters 148000
End of epoch 185 / 200 	 Time Taken: 29 sec
update learning rate: 0.000016 -> 0.000015
(epoch: 186, iters: 985, time: 0.049) D_A: 0.215 G_A: 0.437 vgg: 0.292 
End of epoch 186 / 200 	 Time Taken: 29 sec
update learning rate: 0.000015 -> 0.000014
(epoch: 187, iters: 986, time: 0.034) D_A: 0.187 G_A: 0.374 vgg: 0.347 
End of epoch 187 / 200 	 Time Taken: 28 sec
update learning rate: 0.000014 -> 0.000013
(epoch: 188, iters: 987, time: 0.035) D_A: 0.178 G_A: 0.362 vgg: 0.285 
End of epoch 188 / 200 	 Time Taken: 29 sec
update learning rate: 0.000013 -> 0.000012
(epoch: 189, iters: 988, time: 0.048) D_A: 0.178 G_A: 0.462 vgg: 0.310 
End of epoch 189 / 200 	 Time Taken: 29 sec
update learning rate: 0.000012 -> 0.000011
(epoch: 190, iters: 989, time: 0.034) D_A: 0.160 G_A: 0.456 vgg: 0.297 
saving the model at the end of epoch 190, iters 152000
End of epoch 190 / 200 	 Time Taken: 29 sec
update learning rate: 0.000011 -> 0.000010
(epoch: 191, iters: 990, time: 0.035) D_A: 0.170 G_A: 0.475 vgg: 0.255 
End of epoch 191 / 200 	 Time Taken: 29 sec
update learning rate: 0.000010 -> 0.000009
(epoch: 192, iters: 991, time: 0.049) D_A: 0.191 G_A: 0.371 vgg: 0.285 
End of epoch 192 / 200 	 Time Taken: 29 sec
update learning rate: 0.000009 -> 0.000008
(epoch: 193, iters: 992, time: 0.035) D_A: 0.197 G_A: 0.411 vgg: 0.316 
End of epoch 193 / 200 	 Time Taken: 28 sec
update learning rate: 0.000008 -> 0.000007
(epoch: 194, iters: 993, time: 0.034) D_A: 0.185 G_A: 0.468 vgg: 0.285 
End of epoch 194 / 200 	 Time Taken: 29 sec
update learning rate: 0.000007 -> 0.000006
(epoch: 195, iters: 994, time: 0.053) D_A: 0.183 G_A: 0.436 vgg: 0.278 
saving the model at the end of epoch 195, iters 156000
End of epoch 195 / 200 	 Time Taken: 30 sec
update learning rate: 0.000006 -> 0.000005
(epoch: 196, iters: 995, time: 0.034) D_A: 0.170 G_A: 0.472 vgg: 0.293 
End of epoch 196 / 200 	 Time Taken: 28 sec
update learning rate: 0.000005 -> 0.000004
(epoch: 197, iters: 996, time: 0.034) D_A: 0.182 G_A: 0.362 vgg: 0.311 
End of epoch 197 / 200 	 Time Taken: 29 sec
update learning rate: 0.000004 -> 0.000003
(epoch: 198, iters: 997, time: 0.047) D_A: 0.206 G_A: 0.477 vgg: 0.272 
End of epoch 198 / 200 	 Time Taken: 29 sec
update learning rate: 0.000003 -> 0.000002
(epoch: 199, iters: 998, time: 0.035) D_A: 0.192 G_A: 0.410 vgg: 0.325 
End of epoch 199 / 200 	 Time Taken: 28 sec
update learning rate: 0.000002 -> 0.000001
(epoch: 200, iters: 999, time: 0.036) D_A: 0.206 G_A: 0.407 vgg: 0.318 
saving the latest model (epoch 200, total_steps 160000)
saving the model at the end of epoch 200, iters 160000
End of epoch 200 / 200 	 Time Taken: 29 sec
update learning rate: 0.000001 -> 0.000000
THCudaCheck FAIL file=/pytorch/torch/lib/THC/generic/THCStorage.cu line=58 error=2 : out of memory
------------ Options -------------
aspect_ratio: 1.0
batchSize: 1
checkpoints_dir: ./checkpoints
dataroot: /ssd1/yifan/common_dataset
dataset_mode: unaligned
display_id: 1
display_port: 8097
display_single_pane_ncols: 0
display_winsize: 256
fcn: 0
fineSize: 256
gpu_ids: [0]
how_many: 50
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: False
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_bs32_BN_hdr_unsuperdata_lsgan_vgg
ndf: 64
new_lr: False
ngf: 64
no_dropout: True
no_flip: False
norm: instance
ntest: inf
output_nc: 3
phase: test
resize_or_crop: no
results_dir: ./results/
serial_batches: False
skip: 0.0
syn_norm: False
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 0
which_direction: AtoB
which_epoch: 10
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
single
Traceback (most recent call last):
  File "predict.py", line 19, in <module>
    model = create_model(opt)
  File "/hdd2/yifan/new_CycleGAN/models/models.py", line 31, in create_model
    model.initialize(opt)
  File "/hdd2/yifan/new_CycleGAN/models/single_model.py", line 52, in initialize
    opt.ngf, opt.which_model_netG, opt.norm, not opt.no_dropout, self.gpu_ids, skip=False, opt=opt)
  File "/hdd2/yifan/new_CycleGAN/models/networks.py", line 63, in define_G
    netG.cuda(device=gpu_ids[0])
  File "/usr/local/torch3/lib/python3.5/site-packages/torch/nn/modules/module.py", line 216, in cuda
    return self._apply(lambda t: t.cuda(device))
  File "/usr/local/torch3/lib/python3.5/site-packages/torch/nn/modules/module.py", line 146, in _apply
    module._apply(fn)
  File "/usr/local/torch3/lib/python3.5/site-packages/torch/nn/modules/module.py", line 152, in _apply
    param.data = fn(param.data)
  File "/usr/local/torch3/lib/python3.5/site-packages/torch/nn/modules/module.py", line 216, in <lambda>
    return self._apply(lambda t: t.cuda(device))
  File "/usr/local/torch3/lib/python3.5/site-packages/torch/_utils.py", line 69, in _cuda
    return new_type(self.size()).copy_(self, async)
RuntimeError: cuda runtime error (2) : out of memory at /pytorch/torch/lib/THC/generic/THCStorage.cu:58
------------ Options -------------
batchSize: 14
beta1: 0.5
checkpoints_dir: ./checkpoints
config: configs/unit_gta2city_folder.yaml
continue_train: False
dataroot: /ssd1/yifan/hdr_unsuper_compete
dataset_mode: unaligned
display_freq: 30
display_id: 1
display_port: 9001
display_single_pane_ncols: 0
display_winsize: 256
fcn: 1.0
fineSize: 320
gpu_ids: [0, 1, 2, 3, 4, 5]
identity: 0.0
input_nc: 3
instance_norm: 0.0
isTrain: True
l1: 10.0
lambda_A: 10.0
lambda_B: 10.0
linear: False
loadSize: 286
lr: 0.0001
max_dataset_size: inf
model: single
multiply: False
nThreads: 2
n_layers_D: 3
name: single_unet_conv_add_bs14_synBN_hdr_unsuperdata_lsgan_fcn
ndf: 64
new_lr: False
ngf: 64
niter: 100
niter_decay: 100
no_dropout: True
no_flip: False
no_html: False
no_lsgan: False
no_vgg_instance: False
norm: instance
output_nc: 3
phase: train
pool_size: 50
print_freq: 100
resize_or_crop: crop
save_epoch_freq: 5
save_latest_freq: 5000
serial_batches: False
skip: 1.0
syn_norm: True
tanh: False
use_avgpool: 0
use_mse: False
use_norm: 1.0
use_wgan: 0.0
vgg: 0
vgg_mean: False
which_direction: AtoB
which_epoch: latest
which_model_netD: basic
which_model_netG: sid_unet_resize
-------------- End ----------------
CustomDatasetDataLoader
dataset [UnalignedDataset] was created
#training images = 799
single
---------- Networks initialized -------------
DataParallel(
  (module): Unet_resize_conv(
    (conv1_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_1): LeakyReLU(0.2, inplace)
    (bn1_1): SynchronizedBatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True)
    (conv1_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU1_2): LeakyReLU(0.2, inplace)
    (bn1_2): SynchronizedBatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True)
    (max_pool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv2_1): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_1): LeakyReLU(0.2, inplace)
    (bn2_1): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True)
    (conv2_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU2_2): LeakyReLU(0.2, inplace)
    (bn2_2): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True)
    (max_pool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv3_1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_1): LeakyReLU(0.2, inplace)
    (bn3_1): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True)
    (conv3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU3_2): LeakyReLU(0.2, inplace)
    (bn3_2): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True)
    (max_pool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv4_1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_1): LeakyReLU(0.2, inplace)
    (bn4_1): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True)
    (conv4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU4_2): LeakyReLU(0.2, inplace)
    (bn4_2): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True)
    (max_pool4): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), dilation=(1, 1), ceil_mode=False)
    (conv5_1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_1): LeakyReLU(0.2, inplace)
    (bn5_1): SynchronizedBatchNorm2d(512, eps=1e-05, momentum=0.001, affine=True)
    (conv5_2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU5_2): LeakyReLU(0.2, inplace)
    (bn5_2): SynchronizedBatchNorm2d(512, eps=1e-05, momentum=0.001, affine=True)
    (deconv5): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv6_1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_1): LeakyReLU(0.2, inplace)
    (bn6_1): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True)
    (conv6_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU6_2): LeakyReLU(0.2, inplace)
    (bn6_2): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True)
    (deconv6): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv7_1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_1): LeakyReLU(0.2, inplace)
    (bn7_1): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True)
    (conv7_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU7_2): LeakyReLU(0.2, inplace)
    (bn7_2): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True)
    (deconv7): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv8_1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_1): LeakyReLU(0.2, inplace)
    (bn8_1): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True)
    (conv8_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU8_2): LeakyReLU(0.2, inplace)
    (bn8_2): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True)
    (deconv8): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv9_1): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_1): LeakyReLU(0.2, inplace)
    (bn9_1): SynchronizedBatchNorm2d(32, eps=1e-05, momentum=0.001, affine=True)
    (conv9_2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (LReLU9_2): LeakyReLU(0.2, inplace)
    (conv10): Conv2d(32, 3, kernel_size=(1, 1), stride=(1, 1))
  )
)
Total number of parameters: 8636387
DataParallel(
  (module): NLayerDiscriminator(
    (model): Sequential(
      (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (1): LeakyReLU(0.2, inplace)
      (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (3): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False)
      (4): LeakyReLU(0.2, inplace)
      (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(2, 2))
      (6): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False)
      (7): LeakyReLU(0.2, inplace)
      (8): Conv2d(256, 512, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
      (9): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False)
      (10): LeakyReLU(0.2, inplace)
      (11): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), padding=(2, 2))
    )
  )
)
Total number of parameters: 2764737
-----------------------------------------------
model [SingleGANModel] was created
create web directory ./checkpoints/single_unet_conv_add_bs14_synBN_hdr_unsuperdata_lsgan_fcn/web...
(epoch: 1, iters: 700, time: 0.107) D_A: 0.279 G_A: 1.084 fcn: 0.292 
End of epoch 1 / 200 	 Time Taken: 98 sec
(epoch: 2, iters: 601, time: 0.107) D_A: 0.148 G_A: 0.774 fcn: 0.243 
End of epoch 2 / 200 	 Time Taken: 77 sec
(epoch: 3, iters: 502, time: 0.141) D_A: 0.175 G_A: 0.764 fcn: 0.132 
End of epoch 3 / 200 	 Time Taken: 78 sec
(epoch: 4, iters: 403, time: 0.108) D_A: 0.212 G_A: 0.714 fcn: 0.137 
End of epoch 4 / 200 	 Time Taken: 80 sec
(epoch: 5, iters: 304, time: 0.088) D_A: 0.189 G_A: 0.726 fcn: 0.153 
saving the model at the end of epoch 5, iters 4060
End of epoch 5 / 200 	 Time Taken: 77 sec
(epoch: 6, iters: 205, time: 0.117) D_A: 0.158 G_A: 0.620 fcn: 0.143 
End of epoch 6 / 200 	 Time Taken: 77 sec
(epoch: 7, iters: 106, time: 0.097) D_A: 0.223 G_A: 0.543 fcn: 0.185 
(epoch: 7, iters: 806, time: 0.107) D_A: 0.184 G_A: 0.585 fcn: 0.176 
End of epoch 7 / 200 	 Time Taken: 77 sec
(epoch: 8, iters: 707, time: 0.126) D_A: 0.214 G_A: 0.418 fcn: 0.219 
End of epoch 8 / 200 	 Time Taken: 77 sec
(epoch: 9, iters: 608, time: 0.096) D_A: 0.184 G_A: 0.361 fcn: 0.264 
End of epoch 9 / 200 	 Time Taken: 79 sec
(epoch: 10, iters: 509, time: 0.108) D_A: 0.244 G_A: 0.320 fcn: 0.287 
saving the model at the end of epoch 10, iters 8120
End of epoch 10 / 200 	 Time Taken: 78 sec
(epoch: 11, iters: 410, time: 0.133) D_A: 0.253 G_A: 0.292 fcn: 0.231 
End of epoch 11 / 200 	 Time Taken: 76 sec
(epoch: 12, iters: 311, time: 0.085) D_A: 0.260 G_A: 0.341 fcn: 0.284 
End of epoch 12 / 200 	 Time Taken: 75 sec
(epoch: 13, iters: 212, time: 0.095) D_A: 0.261 G_A: 0.338 fcn: 0.309 
(epoch: 13, iters: 912, time: 0.122) D_A: 0.235 G_A: 0.309 fcn: 0.364 
End of epoch 13 / 200 	 Time Taken: 78 sec
(epoch: 14, iters: 813, time: 0.092) D_A: 0.239 G_A: 0.304 fcn: 0.345 
End of epoch 14 / 200 	 Time Taken: 72 sec
(epoch: 15, iters: 714, time: 0.094) D_A: 0.249 G_A: 0.286 fcn: 0.329 
saving the model at the end of epoch 15, iters 12180
End of epoch 15 / 200 	 Time Taken: 71 sec
(epoch: 16, iters: 615, time: 0.121) D_A: 0.271 G_A: 0.359 fcn: 0.340 
End of epoch 16 / 200 	 Time Taken: 70 sec
(epoch: 17, iters: 516, time: 0.094) D_A: 0.211 G_A: 0.351 fcn: 0.271 
End of epoch 17 / 200 	 Time Taken: 71 sec
(epoch: 18, iters: 417, time: 0.084) D_A: 0.222 G_A: 0.313 fcn: 0.269 
End of epoch 18 / 200 	 Time Taken: 72 sec
(epoch: 19, iters: 318, time: 0.125) D_A: 0.258 G_A: 0.329 fcn: 0.345 
(epoch: 19, iters: 1018, time: 0.086) D_A: 0.273 G_A: 0.273 fcn: 0.365 
End of epoch 19 / 200 	 Time Taken: 71 sec
(epoch: 20, iters: 919, time: 0.089) D_A: 0.229 G_A: 0.326 fcn: 0.395 
saving the model at the end of epoch 20, iters 16240
End of epoch 20 / 200 	 Time Taken: 73 sec
(epoch: 21, iters: 820, time: 0.128) D_A: 0.220 G_A: 0.305 fcn: 0.366 
End of epoch 21 / 200 	 Time Taken: 72 sec
(epoch: 22, iters: 721, time: 0.092) D_A: 0.211 G_A: 0.282 fcn: 0.322 
End of epoch 22 / 200 	 Time Taken: 72 sec
(epoch: 23, iters: 622, time: 0.080) D_A: 0.190 G_A: 0.405 fcn: 0.349 
End of epoch 23 / 200 	 Time Taken: 70 sec
(epoch: 24, iters: 523, time: 0.126) D_A: 0.254 G_A: 0.301 fcn: 0.248 
End of epoch 24 / 200 	 Time Taken: 71 sec
(epoch: 25, iters: 424, time: 0.085) D_A: 0.241 G_A: 0.342 fcn: 0.263 
(epoch: 25, iters: 1124, time: 0.013) D_A: 0.171 G_A: 0.373 fcn: 0.173 
saving the model at the end of epoch 25, iters 20300
End of epoch 25 / 200 	 Time Taken: 71 sec
(epoch: 26, iters: 1025, time: 0.126) D_A: 0.217 G_A: 0.422 fcn: 0.427 
End of epoch 26 / 200 	 Time Taken: 71 sec
(epoch: 27, iters: 926, time: 0.083) D_A: 0.241 G_A: 0.299 fcn: 0.311 
End of epoch 27 / 200 	 Time Taken: 71 sec
(epoch: 28, iters: 827, time: 0.088) D_A: 0.222 G_A: 0.341 fcn: 0.314 
End of epoch 28 / 200 	 Time Taken: 71 sec
(epoch: 29, iters: 728, time: 0.121) D_A: 0.235 G_A: 0.438 fcn: 0.328 
End of epoch 29 / 200 	 Time Taken: 72 sec
(epoch: 30, iters: 629, time: 0.093) D_A: 0.209 G_A: 0.422 fcn: 0.300 
saving the model at the end of epoch 30, iters 24360
End of epoch 30 / 200 	 Time Taken: 73 sec
(epoch: 31, iters: 530, time: 0.079) D_A: 0.248 G_A: 0.344 fcn: 0.382 
End of epoch 31 / 200 	 Time Taken: 71 sec
(epoch: 32, iters: 431, time: 0.124) D_A: 0.246 G_A: 0.269 fcn: 0.393 
(epoch: 32, iters: 1131, time: 0.091) D_A: 0.300 G_A: 0.393 fcn: 0.282 
End of epoch 32 / 200 	 Time Taken: 71 sec
(epoch: 33, iters: 1032, time: 0.092) D_A: 0.235 G_A: 0.402 fcn: 0.255 
End of epoch 33 / 200 	 Time Taken: 70 sec
(epoch: 34, iters: 933, time: 0.123) D_A: 0.210 G_A: 0.376 fcn: 0.376 
End of epoch 34 / 200 	 Time Taken: 71 sec
(epoch: 35, iters: 834, time: 0.090) D_A: 0.159 G_A: 0.359 fcn: 0.355 
saving the model at the end of epoch 35, iters 28420
End of epoch 35 / 200 	 Time Taken: 71 sec
(epoch: 36, iters: 735, time: 0.083) D_A: 0.187 G_A: 0.485 fcn: 0.240 
End of epoch 36 / 200 	 Time Taken: 70 sec
(epoch: 37, iters: 636, time: 0.129) D_A: 0.228 G_A: 0.441 fcn: 0.279 
End of epoch 37 / 200 	 Time Taken: 72 sec
(epoch: 38, iters: 537, time: 0.084) D_A: 0.169 G_A: 0.426 fcn: 0.305 
(epoch: 38, iters: 1237, time: 0.087) D_A: 0.232 G_A: 0.208 fcn: 0.246 
End of epoch 38 / 200 	 Time Taken: 70 sec
(epoch: 39, iters: 1138, time: 0.121) D_A: 0.222 G_A: 0.344 fcn: 0.314 
End of epoch 39 / 200 	 Time Taken: 72 sec
(epoch: 40, iters: 1039, time: 0.078) D_A: 0.224 G_A: 0.342 fcn: 0.307 
saving the model at the end of epoch 40, iters 32480
End of epoch 40 / 200 	 Time Taken: 72 sec
(epoch: 41, iters: 940, time: 0.092) D_A: 0.231 G_A: 0.484 fcn: 0.301 
End of epoch 41 / 200 	 Time Taken: 72 sec
(epoch: 42, iters: 841, time: 0.126) D_A: 0.225 G_A: 0.372 fcn: 0.378 
End of epoch 42 / 200 	 Time Taken: 72 sec
(epoch: 43, iters: 742, time: 0.079) D_A: 0.269 G_A: 0.330 fcn: 0.264 
End of epoch 43 / 200 	 Time Taken: 70 sec
(epoch: 44, iters: 643, time: 0.086) D_A: 0.214 G_A: 0.377 fcn: 0.296 
saving the latest model (epoch 44, total_steps 35000)
(epoch: 44, iters: 1343, time: 0.120) D_A: 0.180 G_A: 0.366 fcn: 0.429 
End of epoch 44 / 200 	 Time Taken: 71 sec
(epoch: 45, iters: 1244, time: 0.082) D_A: 0.191 G_A: 0.337 fcn: 0.297 
saving the model at the end of epoch 45, iters 36540
End of epoch 45 / 200 	 Time Taken: 72 sec
(epoch: 46, iters: 1145, time: 0.085) D_A: 0.244 G_A: 0.335 fcn: 0.318 
End of epoch 46 / 200 	 Time Taken: 71 sec
(epoch: 47, iters: 1046, time: 0.120) D_A: 0.227 G_A: 0.276 fcn: 0.336 
End of epoch 47 / 200 	 Time Taken: 70 sec
(epoch: 48, iters: 947, time: 0.091) D_A: 0.193 G_A: 0.424 fcn: 0.368 
End of epoch 48 / 200 	 Time Taken: 70 sec
(epoch: 49, iters: 848, time: 0.092) D_A: 0.233 G_A: 0.302 fcn: 0.364 
End of epoch 49 / 200 	 Time Taken: 71 sec
(epoch: 50, iters: 749, time: 0.124) D_A: 0.218 G_A: 0.267 fcn: 0.341 
(epoch: 50, iters: 1449, time: 0.016) D_A: 0.213 G_A: 0.466 fcn: 0.395 
saving the model at the end of epoch 50, iters 40600
End of epoch 50 / 200 	 Time Taken: 73 sec
(epoch: 51, iters: 1350, time: 0.090) D_A: 0.171 G_A: 0.505 fcn: 0.348 
End of epoch 51 / 200 	 Time Taken: 75 sec
(epoch: 52, iters: 1251, time: 0.127) D_A: 0.158 G_A: 0.392 fcn: 0.227 
End of epoch 52 / 200 	 Time Taken: 72 sec
(epoch: 53, iters: 1152, time: 0.092) D_A: 0.233 G_A: 0.323 fcn: 0.343 
End of epoch 53 / 200 	 Time Taken: 70 sec
(epoch: 54, iters: 1053, time: 0.092) D_A: 0.217 G_A: 0.353 fcn: 0.331 
End of epoch 54 / 200 	 Time Taken: 72 sec
(epoch: 55, iters: 954, time: 0.117) D_A: 0.197 G_A: 0.347 fcn: 0.274 
saving the model at the end of epoch 55, iters 44660
End of epoch 55 / 200 	 Time Taken: 70 sec
(epoch: 56, iters: 855, time: 0.084) D_A: 0.186 G_A: 0.498 fcn: 0.328 
End of epoch 56 / 200 	 Time Taken: 71 sec
(epoch: 57, iters: 756, time: 0.087) D_A: 0.191 G_A: 0.458 fcn: 0.306 
(epoch: 57, iters: 1456, time: 0.128) D_A: 0.221 G_A: 0.392 fcn: 0.250 
End of epoch 57 / 200 	 Time Taken: 71 sec
(epoch: 58, iters: 1357, time: 0.090) D_A: 0.217 G_A: 0.341 fcn: 0.325 
End of epoch 58 / 200 	 Time Taken: 72 sec
(epoch: 59, iters: 1258, time: 0.087) D_A: 0.209 G_A: 0.539 fcn: 0.204 
End of epoch 59 / 200 	 Time Taken: 70 sec
(epoch: 60, iters: 1159, time: 0.112) D_A: 0.199 G_A: 0.423 fcn: 0.338 
saving the model at the end of epoch 60, iters 48720
End of epoch 60 / 200 	 Time Taken: 71 sec
(epoch: 61, iters: 1060, time: 0.091) D_A: 0.164 G_A: 0.486 fcn: 0.344 
End of epoch 61 / 200 	 Time Taken: 70 sec
(epoch: 62, iters: 961, time: 0.087) D_A: 0.259 G_A: 0.313 fcn: 0.366 
End of epoch 62 / 200 	 Time Taken: 73 sec
(epoch: 63, iters: 862, time: 0.113) D_A: 0.181 G_A: 0.301 fcn: 0.357 
(epoch: 63, iters: 1562, time: 0.090) D_A: 0.177 G_A: 0.382 fcn: 0.306 
End of epoch 63 / 200 	 Time Taken: 71 sec
(epoch: 64, iters: 1463, time: 0.087) D_A: 0.237 G_A: 0.282 fcn: 0.396 
End of epoch 64 / 200 	 Time Taken: 71 sec
(epoch: 65, iters: 1364, time: 0.131) D_A: 0.190 G_A: 0.298 fcn: 0.278 
saving the model at the end of epoch 65, iters 52780
End of epoch 65 / 200 	 Time Taken: 72 sec
(epoch: 66, iters: 1265, time: 0.088) D_A: 0.205 G_A: 0.368 fcn: 0.288 
End of epoch 66 / 200 	 Time Taken: 73 sec
(epoch: 67, iters: 1166, time: 0.084) D_A: 0.189 G_A: 0.320 fcn: 0.214 
End of epoch 67 / 200 	 Time Taken: 70 sec
(epoch: 68, iters: 1067, time: 0.128) D_A: 0.177 G_A: 0.324 fcn: 0.244 
End of epoch 68 / 200 	 Time Taken: 70 sec
(epoch: 69, iters: 968, time: 0.092) D_A: 0.210 G_A: 0.575 fcn: 0.340 
(epoch: 69, iters: 1668, time: 0.086) D_A: 0.202 G_A: 0.359 fcn: 0.383 
End of epoch 69 / 200 	 Time Taken: 70 sec
(epoch: 70, iters: 1569, time: 0.121) D_A: 0.191 G_A: 0.434 fcn: 0.326 
saving the model at the end of epoch 70, iters 56840
End of epoch 70 / 200 	 Time Taken: 72 sec
(epoch: 71, iters: 1470, time: 0.088) D_A: 0.233 G_A: 0.347 fcn: 0.323 
End of epoch 71 / 200 	 Time Taken: 70 sec
(epoch: 72, iters: 1371, time: 0.079) D_A: 0.157 G_A: 0.319 fcn: 0.283 
End of epoch 72 / 200 	 Time Taken: 71 sec
(epoch: 73, iters: 1272, time: 0.120) D_A: 0.187 G_A: 0.263 fcn: 0.267 
End of epoch 73 / 200 	 Time Taken: 71 sec
(epoch: 74, iters: 1173, time: 0.090) D_A: 0.197 G_A: 0.287 fcn: 0.282 
End of epoch 74 / 200 	 Time Taken: 72 sec
(epoch: 75, iters: 1074, time: 0.084) D_A: 0.169 G_A: 0.498 fcn: 0.351 
(epoch: 75, iters: 1774, time: 0.045) D_A: 0.125 G_A: 0.343 fcn: 0.425 
saving the model at the end of epoch 75, iters 60900
End of epoch 75 / 200 	 Time Taken: 71 sec
(epoch: 76, iters: 1675, time: 0.091) D_A: 0.161 G_A: 0.399 fcn: 0.367 
End of epoch 76 / 200 	 Time Taken: 70 sec
(epoch: 77, iters: 1576, time: 0.088) D_A: 0.158 G_A: 0.465 fcn: 0.349 
End of epoch 77 / 200 	 Time Taken: 71 sec
(epoch: 78, iters: 1477, time: 0.128) D_A: 0.197 G_A: 0.293 fcn: 0.267 
End of epoch 78 / 200 	 Time Taken: 74 sec
(epoch: 79, iters: 1378, time: 0.091) D_A: 0.179 G_A: 0.511 fcn: 0.337 
End of epoch 79 / 200 	 Time Taken: 70 sec
(epoch: 80, iters: 1279, time: 0.088) D_A: 0.170 G_A: 0.393 fcn: 0.349 
saving the model at the end of epoch 80, iters 64960
End of epoch 80 / 200 	 Time Taken: 70 sec
(epoch: 81, iters: 1180, time: 0.126) D_A: 0.203 G_A: 0.549 fcn: 0.342 
End of epoch 81 / 200 	 Time Taken: 71 sec
(epoch: 82, iters: 1081, time: 0.092) D_A: 0.167 G_A: 0.533 fcn: 0.250 
(epoch: 82, iters: 1781, time: 0.092) D_A: 0.217 G_A: 0.450 fcn: 0.314 
End of epoch 82 / 200 	 Time Taken: 72 sec
(epoch: 83, iters: 1682, time: 0.129) D_A: 0.237 G_A: 0.479 fcn: 0.286 
End of epoch 83 / 200 	 Time Taken: 70 sec
(epoch: 84, iters: 1583, time: 0.079) D_A: 0.243 G_A: 0.421 fcn: 0.267 
End of epoch 84 / 200 	 Time Taken: 70 sec
(epoch: 85, iters: 1484, time: 0.088) D_A: 0.261 G_A: 0.174 fcn: 0.354 
saving the model at the end of epoch 85, iters 69020
End of epoch 85 / 200 	 Time Taken: 72 sec
(epoch: 86, iters: 1385, time: 0.138) D_A: 0.188 G_A: 0.366 fcn: 0.336 
End of epoch 86 / 200 	 Time Taken: 73 sec
(epoch: 87, iters: 1286, time: 0.079) D_A: 0.190 G_A: 0.405 fcn: 0.226 
saving the latest model (epoch 87, total_steps 70000)
End of epoch 87 / 200 	 Time Taken: 71 sec
(epoch: 88, iters: 1187, time: 0.092) D_A: 0.184 G_A: 0.376 fcn: 0.446 
(epoch: 88, iters: 1887, time: 0.132) D_A: 0.142 G_A: 0.368 fcn: 0.399 
End of epoch 88 / 200 	 Time Taken: 71 sec
(epoch: 89, iters: 1788, time: 0.084) D_A: 0.144 G_A: 0.443 fcn: 0.342 
End of epoch 89 / 200 	 Time Taken: 71 sec
(epoch: 90, iters: 1689, time: 0.091) D_A: 0.216 G_A: 0.435 fcn: 0.342 
saving the model at the end of epoch 90, iters 73080
End of epoch 90 / 200 	 Time Taken: 72 sec
(epoch: 91, iters: 1590, time: 0.124) D_A: 0.218 G_A: 0.355 fcn: 0.270 
End of epoch 91 / 200 	 Time Taken: 70 sec
(epoch: 92, iters: 1491, time: 0.084) D_A: 0.243 G_A: 0.312 fcn: 0.339 
End of epoch 92 / 200 	 Time Taken: 72 sec
(epoch: 93, iters: 1392, time: 0.092) D_A: 0.203 G_A: 0.571 fcn: 0.249 
End of epoch 93 / 200 	 Time Taken: 71 sec
(epoch: 94, iters: 1293, time: 0.126) D_A: 0.221 G_A: 0.415 fcn: 0.405 
(epoch: 94, iters: 1993, time: 0.091) D_A: 0.241 G_A: 0.161 fcn: 0.321 
End of epoch 94 / 200 	 Time Taken: 72 sec
(epoch: 95, iters: 1894, time: 0.091) D_A: 0.169 G_A: 0.293 fcn: 0.348 
saving the model at the end of epoch 95, iters 77140
End of epoch 95 / 200 	 Time Taken: 71 sec
(epoch: 96, iters: 1795, time: 0.120) D_A: 0.192 G_A: 0.335 fcn: 0.372 
End of epoch 96 / 200 	 Time Taken: 71 sec
(epoch: 97, iters: 1696, time: 0.094) D_A: 0.188 G_A: 0.423 fcn: 0.368 
End of epoch 97 / 200 	 Time Taken: 71 sec
(epoch: 98, iters: 1597, time: 0.084) D_A: 0.231 G_A: 0.338 fcn: 0.332 
End of epoch 98 / 200 	 Time Taken: 71 sec
(epoch: 99, iters: 1498, time: 0.125) D_A: 0.220 G_A: 0.291 fcn: 0.291 
End of epoch 99 / 200 	 Time Taken: 71 sec
(epoch: 100, iters: 1399, time: 0.092) D_A: 0.198 G_A: 0.322 fcn: 0.316 
(epoch: 100, iters: 2099, time: 0.016) D_A: 0.204 G_A: 0.488 fcn: 0.553 
saving the model at the end of epoch 100, iters 81200
End of epoch 100 / 200 	 Time Taken: 71 sec
(epoch: 101, iters: 2000, time: 0.118) D_A: 0.149 G_A: 0.360 fcn: 0.286 
End of epoch 101 / 200 	 Time Taken: 71 sec
update learning rate: 0.000100 -> 0.000099
(epoch: 102, iters: 1901, time: 0.092) D_A: 0.181 G_A: 0.339 fcn: 0.339 
End of epoch 102 / 200 	 Time Taken: 72 sec
update learning rate: 0.000099 -> 0.000098
(epoch: 103, iters: 1802, time: 0.092) D_A: 0.212 G_A: 0.478 fcn: 0.338 
End of epoch 103 / 200 	 Time Taken: 71 sec
update learning rate: 0.000098 -> 0.000097
(epoch: 104, iters: 1703, time: 0.121) D_A: 0.238 G_A: 0.312 fcn: 0.415 
End of epoch 104 / 200 	 Time Taken: 72 sec
update learning rate: 0.000097 -> 0.000096
(epoch: 105, iters: 1604, time: 0.087) D_A: 0.199 G_A: 0.307 fcn: 0.360 
saving the model at the end of epoch 105, iters 85260
End of epoch 105 / 200 	 Time Taken: 71 sec
update learning rate: 0.000096 -> 0.000095
(epoch: 106, iters: 1505, time: 0.092) D_A: 0.182 G_A: 0.462 fcn: 0.321 
End of epoch 106 / 200 	 Time Taken: 72 sec
update learning rate: 0.000095 -> 0.000094
(epoch: 107, iters: 1406, time: 0.118) D_A: 0.154 G_A: 0.377 fcn: 0.362 
(epoch: 107, iters: 2106, time: 0.087) D_A: 0.174 G_A: 0.462 fcn: 0.311 
End of epoch 107 / 200 	 Time Taken: 70 sec
update learning rate: 0.000094 -> 0.000093
(epoch: 108, iters: 2007, time: 0.092) D_A: 0.173 G_A: 0.448 fcn: 0.319 
End of epoch 108 / 200 	 Time Taken: 72 sec
update learning rate: 0.000093 -> 0.000092
(epoch: 109, iters: 1908, time: 0.127) D_A: 0.174 G_A: 0.480 fcn: 0.325 
End of epoch 109 / 200 	 Time Taken: 71 sec
update learning rate: 0.000092 -> 0.000091
(epoch: 110, iters: 1809, time: 0.084) D_A: 0.156 G_A: 0.434 fcn: 0.253 
saving the model at the end of epoch 110, iters 89320
End of epoch 110 / 200 	 Time Taken: 73 sec
update learning rate: 0.000091 -> 0.000090
(epoch: 111, iters: 1710, time: 0.091) D_A: 0.192 G_A: 0.442 fcn: 0.500 
End of epoch 111 / 200 	 Time Taken: 71 sec
update learning rate: 0.000090 -> 0.000089
(epoch: 112, iters: 1611, time: 0.124) D_A: 0.204 G_A: 0.283 fcn: 0.252 
End of epoch 112 / 200 	 Time Taken: 71 sec
update learning rate: 0.000089 -> 0.000088
(epoch: 113, iters: 1512, time: 0.090) D_A: 0.208 G_A: 0.358 fcn: 0.353 
(epoch: 113, iters: 2212, time: 0.082) D_A: 0.175 G_A: 0.464 fcn: 0.361 
End of epoch 113 / 200 	 Time Taken: 70 sec
update learning rate: 0.000088 -> 0.000087
(epoch: 114, iters: 2113, time: 0.119) D_A: 0.183 G_A: 0.432 fcn: 0.325 
End of epoch 114 / 200 	 Time Taken: 69 sec
update learning rate: 0.000087 -> 0.000086
(epoch: 115, iters: 2014, time: 0.092) D_A: 0.139 G_A: 0.572 fcn: 0.349 
saving the model at the end of epoch 115, iters 93380
End of epoch 115 / 200 	 Time Taken: 70 sec
update learning rate: 0.000086 -> 0.000085
(epoch: 116, iters: 1915, time: 0.092) D_A: 0.183 G_A: 0.408 fcn: 0.321 
End of epoch 116 / 200 	 Time Taken: 71 sec
update learning rate: 0.000085 -> 0.000084
(epoch: 117, iters: 1816, time: 0.120) D_A: 0.184 G_A: 0.395 fcn: 0.313 
End of epoch 117 / 200 	 Time Taken: 71 sec
update learning rate: 0.000084 -> 0.000083
(epoch: 118, iters: 1717, time: 0.089) D_A: 0.188 G_A: 0.278 fcn: 0.365 
End of epoch 118 / 200 	 Time Taken: 72 sec
update learning rate: 0.000083 -> 0.000082
(epoch: 119, iters: 1618, time: 0.093) D_A: 0.178 G_A: 0.481 fcn: 0.262 
(epoch: 119, iters: 2318, time: 0.127) D_A: 0.222 G_A: 0.485 fcn: 0.342 
End of epoch 119 / 200 	 Time Taken: 73 sec
update learning rate: 0.000082 -> 0.000081
(epoch: 120, iters: 2219, time: 0.086) D_A: 0.197 G_A: 0.299 fcn: 0.412 
saving the model at the end of epoch 120, iters 97440
End of epoch 120 / 200 	 Time Taken: 71 sec
update learning rate: 0.000081 -> 0.000080
(epoch: 121, iters: 2120, time: 0.082) D_A: 0.162 G_A: 0.508 fcn: 0.308 
End of epoch 121 / 200 	 Time Taken: 70 sec
update learning rate: 0.000080 -> 0.000079
(epoch: 122, iters: 2021, time: 0.134) D_A: 0.218 G_A: 0.536 fcn: 0.376 
End of epoch 122 / 200 	 Time Taken: 72 sec
update learning rate: 0.000079 -> 0.000078
(epoch: 123, iters: 1922, time: 0.089) D_A: 0.233 G_A: 0.327 fcn: 0.380 
End of epoch 123 / 200 	 Time Taken: 70 sec
update learning rate: 0.000078 -> 0.000077
(epoch: 124, iters: 1823, time: 0.091) D_A: 0.177 G_A: 0.343 fcn: 0.359 
End of epoch 124 / 200 	 Time Taken: 70 sec
update learning rate: 0.000077 -> 0.000076
(epoch: 125, iters: 1724, time: 0.133) D_A: 0.198 G_A: 0.300 fcn: 0.337 
(epoch: 125, iters: 2424, time: 0.014) D_A: 0.058 G_A: 0.648 fcn: 0.285 
saving the model at the end of epoch 125, iters 101500
End of epoch 125 / 200 	 Time Taken: 72 sec
update learning rate: 0.000076 -> 0.000075
(epoch: 126, iters: 2325, time: 0.092) D_A: 0.184 G_A: 0.359 fcn: 0.337 
End of epoch 126 / 200 	 Time Taken: 71 sec
update learning rate: 0.000075 -> 0.000074
(epoch: 127, iters: 2226, time: 0.122) D_A: 0.192 G_A: 0.502 fcn: 0.280 
End of epoch 127 / 200 	 Time Taken: 71 sec
update learning rate: 0.000074 -> 0.000073
(epoch: 128, iters: 2127, time: 0.090) D_A: 0.162 G_A: 0.356 fcn: 0.425 
End of epoch 128 / 200 	 Time Taken: 71 sec
update learning rate: 0.000073 -> 0.000072
(epoch: 129, iters: 2028, time: 0.092) D_A: 0.218 G_A: 0.312 fcn: 0.265 
End of epoch 129 / 200 	 Time Taken: 72 sec
update learning rate: 0.000072 -> 0.000071
(epoch: 130, iters: 1929, time: 0.121) D_A: 0.136 G_A: 0.413 fcn: 0.365 
saving the latest model (epoch 130, total_steps 105000)
saving the model at the end of epoch 130, iters 105560
End of epoch 130 / 200 	 Time Taken: 72 sec
update learning rate: 0.000071 -> 0.000070
(epoch: 131, iters: 1830, time: 0.092) D_A: 0.207 G_A: 0.298 fcn: 0.334 
End of epoch 131 / 200 	 Time Taken: 71 sec
update learning rate: 0.000070 -> 0.000069
(epoch: 132, iters: 1731, time: 0.093) D_A: 0.241 G_A: 0.452 fcn: 0.298 
(epoch: 132, iters: 2431, time: 0.139) D_A: 0.175 G_A: 0.508 fcn: 0.336 
End of epoch 132 / 200 	 Time Taken: 71 sec
update learning rate: 0.000069 -> 0.000068
(epoch: 133, iters: 2332, time: 0.087) D_A: 0.182 G_A: 0.419 fcn: 0.344 
End of epoch 133 / 200 	 Time Taken: 72 sec
update learning rate: 0.000068 -> 0.000067
(epoch: 134, iters: 2233, time: 0.084) D_A: 0.147 G_A: 0.395 fcn: 0.247 
End of epoch 134 / 200 	 Time Taken: 71 sec
update learning rate: 0.000067 -> 0.000066
(epoch: 135, iters: 2134, time: 0.131) D_A: 0.129 G_A: 0.475 fcn: 0.348 
saving the model at the end of epoch 135, iters 109620
End of epoch 135 / 200 	 Time Taken: 71 sec
update learning rate: 0.000066 -> 0.000065
(epoch: 136, iters: 2035, time: 0.088) D_A: 0.184 G_A: 0.651 fcn: 0.259 
End of epoch 136 / 200 	 Time Taken: 71 sec
update learning rate: 0.000065 -> 0.000064
(epoch: 137, iters: 1936, time: 0.092) D_A: 0.198 G_A: 0.503 fcn: 0.299 
End of epoch 137 / 200 	 Time Taken: 72 sec
update learning rate: 0.000064 -> 0.000063
(epoch: 138, iters: 1837, time: 0.127) D_A: 0.151 G_A: 0.399 fcn: 0.347 
(epoch: 138, iters: 2537, time: 0.092) D_A: 0.221 G_A: 0.516 fcn: 0.328 
End of epoch 138 / 200 	 Time Taken: 71 sec
update learning rate: 0.000063 -> 0.000062
(epoch: 139, iters: 2438, time: 0.092) D_A: 0.160 G_A: 0.494 fcn: 0.356 
End of epoch 139 / 200 	 Time Taken: 71 sec
update learning rate: 0.000062 -> 0.000061
(epoch: 140, iters: 2339, time: 0.127) D_A: 0.186 G_A: 0.519 fcn: 0.458 
saving the model at the end of epoch 140, iters 113680
End of epoch 140 / 200 	 Time Taken: 71 sec
update learning rate: 0.000061 -> 0.000060
(epoch: 141, iters: 2240, time: 0.092) D_A: 0.164 G_A: 0.291 fcn: 0.280 
End of epoch 141 / 200 	 Time Taken: 72 sec
update learning rate: 0.000060 -> 0.000059
(epoch: 142, iters: 2141, time: 0.089) D_A: 0.183 G_A: 0.492 fcn: 0.318 
End of epoch 142 / 200 	 Time Taken: 71 sec
update learning rate: 0.000059 -> 0.000058
(epoch: 143, iters: 2042, time: 0.128) D_A: 0.164 G_A: 0.393 fcn: 0.276 
End of epoch 143 / 200 	 Time Taken: 71 sec
update learning rate: 0.000058 -> 0.000057
(epoch: 144, iters: 1943, time: 0.093) D_A: 0.215 G_A: 0.547 fcn: 0.362 
(epoch: 144, iters: 2643, time: 0.092) D_A: 0.139 G_A: 0.403 fcn: 0.388 
End of epoch 144 / 200 	 Time Taken: 71 sec
update learning rate: 0.000057 -> 0.000056
(epoch: 145, iters: 2544, time: 0.134) D_A: 0.250 G_A: 0.450 fcn: 0.221 
saving the model at the end of epoch 145, iters 117740
End of epoch 145 / 200 	 Time Taken: 74 sec
update learning rate: 0.000056 -> 0.000055
(epoch: 146, iters: 2445, time: 0.092) D_A: 0.185 G_A: 0.337 fcn: 0.320 
End of epoch 146 / 200 	 Time Taken: 71 sec
update learning rate: 0.000055 -> 0.000054
(epoch: 147, iters: 2346, time: 0.080) D_A: 0.148 G_A: 0.422 fcn: 0.229 
End of epoch 147 / 200 	 Time Taken: 71 sec
update learning rate: 0.000054 -> 0.000053
(epoch: 148, iters: 2247, time: 0.137) D_A: 0.149 G_A: 0.569 fcn: 0.301 
End of epoch 148 / 200 	 Time Taken: 71 sec
update learning rate: 0.000053 -> 0.000052
(epoch: 149, iters: 2148, time: 0.091) D_A: 0.149 G_A: 0.427 fcn: 0.380 
End of epoch 149 / 200 	 Time Taken: 73 sec
update learning rate: 0.000052 -> 0.000051
(epoch: 150, iters: 2049, time: 0.082) D_A: 0.128 G_A: 0.393 fcn: 0.352 
(epoch: 150, iters: 2749, time: 0.055) D_A: 0.214 G_A: 0.510 fcn: 0.310 
saving the model at the end of epoch 150, iters 121800
End of epoch 150 / 200 	 Time Taken: 71 sec
update learning rate: 0.000051 -> 0.000050
(epoch: 151, iters: 2650, time: 0.092) D_A: 0.165 G_A: 0.488 fcn: 0.256 
End of epoch 151 / 200 	 Time Taken: 71 sec
update learning rate: 0.000050 -> 0.000049
(epoch: 152, iters: 2551, time: 0.080) D_A: 0.173 G_A: 0.402 fcn: 0.306 
End of epoch 152 / 200 	 Time Taken: 71 sec
update learning rate: 0.000049 -> 0.000048
(epoch: 153, iters: 2452, time: 0.129) D_A: 0.201 G_A: 0.534 fcn: 0.304 
End of epoch 153 / 200 	 Time Taken: 72 sec
update learning rate: 0.000048 -> 0.000047
(epoch: 154, iters: 2353, time: 0.091) D_A: 0.147 G_A: 0.491 fcn: 0.326 
End of epoch 154 / 200 	 Time Taken: 72 sec
update learning rate: 0.000047 -> 0.000046
(epoch: 155, iters: 2254, time: 0.091) D_A: 0.170 G_A: 0.313 fcn: 0.307 
saving the model at the end of epoch 155, iters 125860
End of epoch 155 / 200 	 Time Taken: 71 sec
update learning rate: 0.000046 -> 0.000045
(epoch: 156, iters: 2155, time: 0.121) D_A: 0.148 G_A: 0.456 fcn: 0.395 
End of epoch 156 / 200 	 Time Taken: 71 sec
update learning rate: 0.000045 -> 0.000044
(epoch: 157, iters: 2056, time: 0.089) D_A: 0.151 G_A: 0.446 fcn: 0.348 
(epoch: 157, iters: 2756, time: 0.088) D_A: 0.132 G_A: 0.370 fcn: 0.296 
End of epoch 157 / 200 	 Time Taken: 72 sec
update learning rate: 0.000044 -> 0.000043
(epoch: 158, iters: 2657, time: 0.127) D_A: 0.185 G_A: 0.392 fcn: 0.262 
End of epoch 158 / 200 	 Time Taken: 70 sec
update learning rate: 0.000043 -> 0.000042
(epoch: 159, iters: 2558, time: 0.088) D_A: 0.262 G_A: 0.376 fcn: 0.582 
End of epoch 159 / 200 	 Time Taken: 72 sec
update learning rate: 0.000042 -> 0.000041
(epoch: 160, iters: 2459, time: 0.090) D_A: 0.177 G_A: 0.450 fcn: 0.332 
saving the model at the end of epoch 160, iters 129920
End of epoch 160 / 200 	 Time Taken: 72 sec
update learning rate: 0.000041 -> 0.000040
(epoch: 161, iters: 2360, time: 0.132) D_A: 0.158 G_A: 0.521 fcn: 0.468 
End of epoch 161 / 200 	 Time Taken: 73 sec
update learning rate: 0.000040 -> 0.000039
(epoch: 162, iters: 2261, time: 0.079) D_A: 0.153 G_A: 0.355 fcn: 0.318 
End of epoch 162 / 200 	 Time Taken: 71 sec
update learning rate: 0.000039 -> 0.000038
(epoch: 163, iters: 2162, time: 0.092) D_A: 0.184 G_A: 0.483 fcn: 0.411 
(epoch: 163, iters: 2862, time: 0.142) D_A: 0.162 G_A: 0.465 fcn: 0.217 
End of epoch 163 / 200 	 Time Taken: 71 sec
update learning rate: 0.000038 -> 0.000037
(epoch: 164, iters: 2763, time: 0.082) D_A: 0.165 G_A: 0.413 fcn: 0.350 
End of epoch 164 / 200 	 Time Taken: 72 sec
update learning rate: 0.000037 -> 0.000036
(epoch: 165, iters: 2664, time: 0.090) D_A: 0.141 G_A: 0.436 fcn: 0.506 
saving the model at the end of epoch 165, iters 133980
End of epoch 165 / 200 	 Time Taken: 72 sec
update learning rate: 0.000036 -> 0.000035
(epoch: 166, iters: 2565, time: 0.132) D_A: 0.162 G_A: 0.462 fcn: 0.303 
End of epoch 166 / 200 	 Time Taken: 70 sec
update learning rate: 0.000035 -> 0.000034
(epoch: 167, iters: 2466, time: 0.093) D_A: 0.186 G_A: 0.620 fcn: 0.290 
End of epoch 167 / 200 	 Time Taken: 73 sec
update learning rate: 0.000034 -> 0.000033
(epoch: 168, iters: 2367, time: 0.093) D_A: 0.170 G_A: 0.542 fcn: 0.324 
End of epoch 168 / 200 	 Time Taken: 74 sec
update learning rate: 0.000033 -> 0.000032
(epoch: 169, iters: 2268, time: 0.131) D_A: 0.129 G_A: 0.421 fcn: 0.302 
(epoch: 169, iters: 2968, time: 0.090) D_A: 0.205 G_A: 0.320 fcn: 0.344 
End of epoch 169 / 200 	 Time Taken: 73 sec
update learning rate: 0.000032 -> 0.000031
(epoch: 170, iters: 2869, time: 0.092) D_A: 0.168 G_A: 0.370 fcn: 0.336 
saving the model at the end of epoch 170, iters 138040
End of epoch 170 / 200 	 Time Taken: 73 sec
update learning rate: 0.000031 -> 0.000030
(epoch: 171, iters: 2770, time: 0.129) D_A: 0.120 G_A: 0.563 fcn: 0.310 
End of epoch 171 / 200 	 Time Taken: 74 sec
update learning rate: 0.000030 -> 0.000029
(epoch: 172, iters: 2671, time: 0.094) D_A: 0.165 G_A: 0.397 fcn: 0.363 
End of epoch 172 / 200 	 Time Taken: 74 sec
update learning rate: 0.000029 -> 0.000028
(epoch: 173, iters: 2572, time: 0.095) D_A: 0.172 G_A: 0.485 fcn: 0.333 
saving the latest model (epoch 173, total_steps 140000)
End of epoch 173 / 200 	 Time Taken: 74 sec
update learning rate: 0.000028 -> 0.000027
(epoch: 174, iters: 2473, time: 0.117) D_A: 0.199 G_A: 0.431 fcn: 0.397 
End of epoch 174 / 200 	 Time Taken: 71 sec
update learning rate: 0.000027 -> 0.000026
(epoch: 175, iters: 2374, time: 0.092) D_A: 0.149 G_A: 0.641 fcn: 0.318 
(epoch: 175, iters: 3074, time: 0.014) D_A: 0.099 G_A: 0.631 fcn: 0.485 
saving the model at the end of epoch 175, iters 142100
End of epoch 175 / 200 	 Time Taken: 72 sec
update learning rate: 0.000026 -> 0.000025
(epoch: 176, iters: 2975, time: 0.127) D_A: 0.145 G_A: 0.431 fcn: 0.321 
End of epoch 176 / 200 	 Time Taken: 74 sec
update learning rate: 0.000025 -> 0.000024
(epoch: 177, iters: 2876, time: 0.088) D_A: 0.206 G_A: 0.548 fcn: 0.287 
End of epoch 177 / 200 	 Time Taken: 73 sec
update learning rate: 0.000024 -> 0.000023
(epoch: 178, iters: 2777, time: 0.091) D_A: 0.188 G_A: 0.566 fcn: 0.259 
End of epoch 178 / 200 	 Time Taken: 73 sec
update learning rate: 0.000023 -> 0.000022
(epoch: 179, iters: 2678, time: 0.134) D_A: 0.151 G_A: 0.400 fcn: 0.333 
End of epoch 179 / 200 	 Time Taken: 72 sec
update learning rate: 0.000022 -> 0.000021
(epoch: 180, iters: 2579, time: 0.092) D_A: 0.149 G_A: 0.374 fcn: 0.347 
saving the model at the end of epoch 180, iters 146160
End of epoch 180 / 200 	 Time Taken: 74 sec
update learning rate: 0.000021 -> 0.000020
(epoch: 181, iters: 2480, time: 0.087) D_A: 0.141 G_A: 0.505 fcn: 0.325 
End of epoch 181 / 200 	 Time Taken: 72 sec
update learning rate: 0.000020 -> 0.000019
(epoch: 182, iters: 2381, time: 0.130) D_A: 0.181 G_A: 0.650 fcn: 0.220 
(epoch: 182, iters: 3081, time: 0.090) D_A: 0.157 G_A: 0.494 fcn: 0.419 
End of epoch 182 / 200 	 Time Taken: 72 sec
update learning rate: 0.000019 -> 0.000018
(epoch: 183, iters: 2982, time: 0.090) D_A: 0.180 G_A: 0.531 fcn: 0.356 
End of epoch 183 / 200 	 Time Taken: 74 sec
update learning rate: 0.000018 -> 0.000017
(epoch: 184, iters: 2883, time: 0.125) D_A: 0.163 G_A: 0.375 fcn: 0.358 
End of epoch 184 / 200 	 Time Taken: 74 sec
update learning rate: 0.000017 -> 0.000016
(epoch: 185, iters: 2784, time: 0.092) D_A: 0.175 G_A: 0.382 fcn: 0.266 
saving the model at the end of epoch 185, iters 150220
End of epoch 185 / 200 	 Time Taken: 73 sec
update learning rate: 0.000016 -> 0.000015
(epoch: 186, iters: 2685, time: 0.097) D_A: 0.150 G_A: 0.434 fcn: 0.312 
End of epoch 186 / 200 	 Time Taken: 73 sec
update learning rate: 0.000015 -> 0.000014
(epoch: 187, iters: 2586, time: 0.136) D_A: 0.119 G_A: 0.578 fcn: 0.254 
End of epoch 187 / 200 	 Time Taken: 73 sec
update learning rate: 0.000014 -> 0.000013
(epoch: 188, iters: 2487, time: 0.082) D_A: 0.151 G_A: 0.592 fcn: 0.331 
(epoch: 188, iters: 3187, time: 0.095) D_A: 0.147 G_A: 0.501 fcn: 0.277 
End of epoch 188 / 200 	 Time Taken: 73 sec
update learning rate: 0.000013 -> 0.000012
(epoch: 189, iters: 3088, time: 0.127) D_A: 0.166 G_A: 0.506 fcn: 0.302 
End of epoch 189 / 200 	 Time Taken: 74 sec
update learning rate: 0.000012 -> 0.000011
(epoch: 190, iters: 2989, time: 0.091) D_A: 0.137 G_A: 0.594 fcn: 0.406 
saving the model at the end of epoch 190, iters 154280
End of epoch 190 / 200 	 Time Taken: 77 sec
update learning rate: 0.000011 -> 0.000010
(epoch: 191, iters: 2890, time: 0.099) D_A: 0.138 G_A: 0.527 fcn: 0.354 
End of epoch 191 / 200 	 Time Taken: 77 sec
update learning rate: 0.000010 -> 0.000009
(epoch: 192, iters: 2791, time: 0.137) D_A: 0.173 G_A: 0.525 fcn: 0.338 
End of epoch 192 / 200 	 Time Taken: 78 sec
update learning rate: 0.000009 -> 0.000008
(epoch: 193, iters: 2692, time: 0.099) D_A: 0.145 G_A: 0.515 fcn: 0.255 
End of epoch 193 / 200 	 Time Taken: 77 sec
update learning rate: 0.000008 -> 0.000007
(epoch: 194, iters: 2593, time: 0.098) D_A: 0.144 G_A: 0.524 fcn: 0.414 
(epoch: 194, iters: 3293, time: 0.141) D_A: 0.156 G_A: 0.498 fcn: 0.354 
End of epoch 194 / 200 	 Time Taken: 77 sec
update learning rate: 0.000007 -> 0.000006
(epoch: 195, iters: 3194, time: 0.093) D_A: 0.155 G_A: 0.416 fcn: 0.289 
saving the model at the end of epoch 195, iters 158340
End of epoch 195 / 200 	 Time Taken: 77 sec
update learning rate: 0.000006 -> 0.000005
(epoch: 196, iters: 3095, time: 0.094) D_A: 0.188 G_A: 0.484 fcn: 0.350 
End of epoch 196 / 200 	 Time Taken: 76 sec
update learning rate: 0.000005 -> 0.000004
(epoch: 197, iters: 2996, time: 0.139) D_A: 0.131 G_A: 0.533 fcn: 0.396 
End of epoch 197 / 200 	 Time Taken: 77 sec
update learning rate: 0.000004 -> 0.000003
(epoch: 198, iters: 2897, time: 0.096) D_A: 0.158 G_A: 0.455 fcn: 0.211 
End of epoch 198 / 200 	 Time Taken: 77 sec
update learning rate: 0.000003 -> 0.000002
(epoch: 199, iters: 2798, time: 0.101) D_A: 0.184 G_A: 0.472 fcn: 0.329 
End of epoch 199 / 200 	 Time Taken: 76 sec
update learning rate: 0.000002 -> 0.000001
(epoch: 200, iters: 2699, time: 0.141) D_A: 0.117 G_A: 0.478 fcn: 0.351 
(epoch: 200, iters: 3399, time: 0.016) D_A: 0.100 G_A: 0.436 fcn: 0.179 
saving the model at the end of epoch 200, iters 162400
End of epoch 200 / 200 	 Time Taken: 77 sec
update learning rate: 0.000001 -> 0.000000
Traceback (most recent call last):
  File "/usr/lib/python3.5/runpy.py", line 184, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.5/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/usr/local/lib/python3.5/dist-packages/visdom/server.py", line 1063, in <module>
    main()
  File "/usr/local/lib/python3.5/dist-packages/visdom/server.py", line 1058, in main
    start_server(port=FLAGS.port, env_path=FLAGS.env_path, readonly=FLAGS.readonly, print_func=print_func)
  File "/usr/local/lib/python3.5/dist-packages/visdom/server.py", line 1018, in start_server
    app.listen(port, max_buffer_size=1024 ** 3)
  File "/usr/local/torch3/lib/python3.5/site-packages/tornado/web.py", line 1986, in listen
    server.listen(port, address)
  File "/usr/local/torch3/lib/python3.5/site-packages/tornado/tcpserver.py", line 144, in listen
    sockets = bind_sockets(port, address=address)
  File "/usr/local/torch3/lib/python3.5/site-packages/tornado/netutil.py", line 163, in bind_sockets
    sock.bind(sockaddr)
OSError: [Errno 98] Address already in use
Downloading scripts. It might take a while.
It's Alive!
Traceback (most recent call last):
  File "/usr/lib/python3.5/runpy.py", line 184, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.5/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/usr/local/lib/python3.5/dist-packages/visdom/server.py", line 1063, in <module>
    main()
  File "/usr/local/lib/python3.5/dist-packages/visdom/server.py", line 1058, in main
    start_server(port=FLAGS.port, env_path=FLAGS.env_path, readonly=FLAGS.readonly, print_func=print_func)
  File "/usr/local/lib/python3.5/dist-packages/visdom/server.py", line 1018, in start_server
    app.listen(port, max_buffer_size=1024 ** 3)
  File "/usr/local/torch3/lib/python3.5/site-packages/tornado/web.py", line 1986, in listen
    server.listen(port, address)
  File "/usr/local/torch3/lib/python3.5/site-packages/tornado/tcpserver.py", line 144, in listen
    sockets = bind_sockets(port, address=address)
  File "/usr/local/torch3/lib/python3.5/site-packages/tornado/netutil.py", line 163, in bind_sockets
    sock.bind(sockaddr)
OSError: [Errno 98] Address already in use
Downloading scripts. It might take a while.
It's Alive!
